### Класс ImageProcessing : QObject

Первый класс для работы с радиолокационными изображениями. Данный класс работает со списками РЛИ, декодированием метаданных и отображением полученных РЛИ на карте. Для работы с файлами используется класс **`ImageManager`**.

#### Публичные методы

###### `bool InitialScan()`

Выполняет полное сканирование рабочей директории. Рабочая директория задается классом `SConfig` и зависит от использования загрузчика изображений. Декодирует, обрабатывает и выводит все найденные изображения на карту QML.

###### `bool PartialScan()`

Выполняет частичное сканирование рабочей директории. Рабочая директория задается классом SConfig и зависит от использования загрузчика изображений. Работает только с теми изображениями, которые есть в рабочей директории, но отсутствуют в интерфейсе и на карте. Декодирует, обрабатывает и выводит все найденные отличающиеся изображения на карту QML.

###### `bool getReadyStatus()`

Возвращает статус менеджера изображений. Возвращает true, если поиск изображений в рабочей директории завершился.

###### `int getFileCounter()`

Возвращает индекс изображения в списке, которое сейчас отображается в интерфейсе программы и над которым производятся действия пользователем.

###### `int getVectorSize()`

Возвращает полное количество изображений в списке.

###### `void goLeft()`

Смещает индекс изображения в списке, которое сейчас отображается и над которым пользователь может производить действия, вниз по списку на 1. Не смещает, если данное изображение - первое в списке.

###### `void goRight()`

Смещает индекс изображения в списке, которое сейчас отображается и над которым пользователь может производить действия, вверх по списку на 1. Не смещает, если данное изображение - последнее в списке.

###### `void clearCache()`

Очищает кэш программы, список изображений и все изображения на карте. Создает новый кэш и выполняет полное сканирование рабочей директории.

###### `void imageChecklistLoop()`

Обновляет отображение изображений на карте.

#### Публичные члены класса

###### `QVector<bool> imageChecklist`

Список булевых переменных для работы с интерфейсом программы. Редактируется интерфейсом извне.

#### Сигналы

###### `setLeftButton(bool b)`

Задает состояние кнопки перемещения вниз по списку изображений. Сигнал подается, когда требуется это изменение.

###### `setRightButton(bool b)`

Задает состояние кнопки перемещения вверх по списку изображений. Сигнал подается, когда требуется это изменение.

###### `updateTopLabels(int total, int current)`

Сигнал для обновления верхней панели интерфейса РЛИ. Задает текущее рабочее изображение и общее количество изображений в списке.

###### `updateMetaLabels(QString filename, float lat, float lon, float dx, float dy, float x0, float y0, float angle, float driftAngle, QString hexSum, QString datetime, bool match)`

Сигнал для обновления панели метаданных в интерфейсе РЛИ. Задает все метаданные текущего изображения и подается при изменении индекса текущего изображения либо при сканировании рабочей директории.

###### `enableImageBar(bool b)`

Сигнал для отображения панели для работы с РЛИ в интерфейсе. Включает панель, если есть хотя бы одно действительное изображение в списке и выключает, если их нет.

