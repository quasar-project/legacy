<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classNetworking_1_1Telemetry" kind="class" language="C++" prot="public">
    <compoundname>Networking::Telemetry</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="telemetry_8h" local="no">telemetry.h</includes>
      <sectiondef kind="property">
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1a0ff261883ed75d6adedba4c3bc880993" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double Networking::Telemetry::latitude</definition>
        <argsstring></argsstring>
        <name>latitude</name>
        <qualifiedname>Networking::Telemetry::latitude</qualifiedname>
        <read>latitude</read>
        <write>setLatitude</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1a35b8cf94f4f2dbba629edcca354cc552" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double Networking::Telemetry::longitude</definition>
        <argsstring></argsstring>
        <name>longitude</name>
        <qualifiedname>Networking::Telemetry::longitude</qualifiedname>
        <read>longitude</read>
        <write>setLongitude</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1aecae2a24dec3b63d939a542dea6412a1" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double Networking::Telemetry::altitude</definition>
        <argsstring></argsstring>
        <name>altitude</name>
        <qualifiedname>Networking::Telemetry::altitude</qualifiedname>
        <read>altitude</read>
        <write>setAltitude</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1ae43928bd31e6eb3c105e78e0535f07b3" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double Networking::Telemetry::velocityCourse</definition>
        <argsstring></argsstring>
        <name>velocityCourse</name>
        <qualifiedname>Networking::Telemetry::velocityCourse</qualifiedname>
        <read>velocityCourse</read>
        <write>setVelocityCourse</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1a20721f52a9e741c69f4bc8508c1d130d" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double Networking::Telemetry::velocityEast</definition>
        <argsstring></argsstring>
        <name>velocityEast</name>
        <qualifiedname>Networking::Telemetry::velocityEast</qualifiedname>
        <read>velocityEast</read>
        <write>setVelocityEast</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1a5e924120b7b030fa156560c6da4ad600" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double Networking::Telemetry::velocityNorth</definition>
        <argsstring></argsstring>
        <name>velocityNorth</name>
        <qualifiedname>Networking::Telemetry::velocityNorth</qualifiedname>
        <read>velocityNorth</read>
        <write>setVelocityNorth</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1ab3b02a4a46f2aa989e89590afabe2747" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double Networking::Telemetry::velocityVertical</definition>
        <argsstring></argsstring>
        <name>velocityVertical</name>
        <qualifiedname>Networking::Telemetry::velocityVertical</qualifiedname>
        <read>velocityVertical</read>
        <write>setVelocityVertical</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1a7c8c130ce73576e9a331df7c2db5d56d" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double Networking::Telemetry::pitch</definition>
        <argsstring></argsstring>
        <name>pitch</name>
        <qualifiedname>Networking::Telemetry::pitch</qualifiedname>
        <read>pitch</read>
        <write>setPitch</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1a5f522ba2a1e1275e4649b074bb1b95a0" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double Networking::Telemetry::roll</definition>
        <argsstring></argsstring>
        <name>roll</name>
        <qualifiedname>Networking::Telemetry::roll</qualifiedname>
        <read>roll</read>
        <write>setRoll</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1a8234a1aa99742a7ccc457c3966a576dc" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double Networking::Telemetry::yaw</definition>
        <argsstring></argsstring>
        <name>yaw</name>
        <qualifiedname>Networking::Telemetry::yaw</qualifiedname>
        <read>yaw</read>
        <write>setYaw</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1a0308809fdedf4128033ca0112e9a118e" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double Networking::Telemetry::course</definition>
        <argsstring></argsstring>
        <name>course</name>
        <qualifiedname>Networking::Telemetry::course</qualifiedname>
        <read>course</read>
        <write>setCourse</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1aa9eb08284d56832c407e23e76d6c611e" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>uint64_t</type>
        <definition>uint64_t Networking::Telemetry::time</definition>
        <argsstring></argsstring>
        <name>time</name>
        <qualifiedname>Networking::Telemetry::time</qualifiedname>
        <read>time</read>
        <write>setTime</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1a1ea75d5d4218d65d209a534ed712e309" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Networking::Telemetry::satellites</definition>
        <argsstring></argsstring>
        <name>satellites</name>
        <qualifiedname>Networking::Telemetry::satellites</qualifiedname>
        <read>satellites</read>
        <write>setSatellites</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classNetworking_1_1Telemetry_1a09791576323f2d24a15ad2a4bf257565" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double Networking::Telemetry::seaLevel</definition>
        <argsstring></argsstring>
        <name>seaLevel</name>
        <qualifiedname>Networking::Telemetry::seaLevel</qualifiedname>
        <read>seaLevel</read>
        <write>setSeaLevel</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="1" column="0" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNetworking_1_1Telemetry_1a513b3feb71383a04508d20b5000284a8" prot="private" static="no" mutable="no">
        <type>QDateTime</type>
        <definition>QDateTime Networking::Telemetry::m_datetime</definition>
        <argsstring></argsstring>
        <name>m_datetime</name>
        <qualifiedname>Networking::Telemetry::m_datetime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="63" column="23" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNetworking_1_1Telemetry_1a04867385b4cbc23eba7ceafb691b5660" prot="private" static="no" mutable="no">
        <type><ref refid="structNetworking_1_1TelemetryDatagram" kindref="compound">TelemetryDatagram</ref></type>
        <definition>TelemetryDatagram Networking::Telemetry::datagram</definition>
        <argsstring></argsstring>
        <name>datagram</name>
        <qualifiedname>Networking::Telemetry::datagram</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="64" column="31" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNetworking_1_1Telemetry_1ab67e84b0fefb6622112f00f725e28168" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Networking::Telemetry::m_seaLevel</definition>
        <argsstring></argsstring>
        <name>m_seaLevel</name>
        <qualifiedname>Networking::Telemetry::m_seaLevel</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="65" column="20" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a521b1fa4c36547d90f69846e65ae7ed5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Telemetry::Telemetry</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>Telemetry</name>
        <qualifiedname>Networking::Telemetry::Telemetry</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="29" column="22" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="5" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1aa80a1dc3173378c2db6210418d9995e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Telemetry::latitude</definition>
        <argsstring>() const</argsstring>
        <name>latitude</name>
        <qualifiedname>Networking::Telemetry::latitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="31" column="21" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="9" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1af7866d05c4feb9749c48638f06e92df6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setLatitude</definition>
        <argsstring>(double)</argsstring>
        <name>setLatitude</name>
        <qualifiedname>Networking::Telemetry::setLatitude</qualifiedname>
        <param>
          <type>double</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="31" column="41" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="10" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a341a054594c119b92b61f26615b34698" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Telemetry::longitude</definition>
        <argsstring>() const</argsstring>
        <name>longitude</name>
        <qualifiedname>Networking::Telemetry::longitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="32" column="21" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a8ec620f687db888baac712d5ddd82354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setLongitude</definition>
        <argsstring>(double)</argsstring>
        <name>setLongitude</name>
        <qualifiedname>Networking::Telemetry::setLongitude</qualifiedname>
        <param>
          <type>double</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="32" column="42" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="18" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1aba9568ec79757b74cf27518cd7fac551" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Telemetry::altitude</definition>
        <argsstring>() const</argsstring>
        <name>altitude</name>
        <qualifiedname>Networking::Telemetry::altitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="33" column="21" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1aa45d462e6ed7c42bd68df54cb64e1388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setAltitude</definition>
        <argsstring>(double)</argsstring>
        <name>setAltitude</name>
        <qualifiedname>Networking::Telemetry::setAltitude</qualifiedname>
        <param>
          <type>double</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="33" column="41" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1ae5fb4199b0dd262a136156ea7ad41ec6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Telemetry::velocityCourse</definition>
        <argsstring>() const</argsstring>
        <name>velocityCourse</name>
        <qualifiedname>Networking::Telemetry::velocityCourse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="34" column="21" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a2e2d142c8226574174f4088fec6b507f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setVelocityCourse</definition>
        <argsstring>(double)</argsstring>
        <name>setVelocityCourse</name>
        <qualifiedname>Networking::Telemetry::setVelocityCourse</qualifiedname>
        <param>
          <type>double</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="34" column="47" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1aeaec66d9070a955df28e0be5863e39f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Telemetry::velocityEast</definition>
        <argsstring>() const</argsstring>
        <name>velocityEast</name>
        <qualifiedname>Networking::Telemetry::velocityEast</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="35" column="21" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1ac07ac2fc21d3b0295e7a5a86c0b37510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setVelocityEast</definition>
        <argsstring>(double)</argsstring>
        <name>setVelocityEast</name>
        <qualifiedname>Networking::Telemetry::setVelocityEast</qualifiedname>
        <param>
          <type>double</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="35" column="45" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a1fa84be7e07ccb570c39f1c6f90bebf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Telemetry::velocityNorth</definition>
        <argsstring>() const</argsstring>
        <name>velocityNorth</name>
        <qualifiedname>Networking::Telemetry::velocityNorth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="36" column="21" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1af32eb260db79e653e31949ad360a31e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setVelocityNorth</definition>
        <argsstring>(double)</argsstring>
        <name>setVelocityNorth</name>
        <qualifiedname>Networking::Telemetry::setVelocityNorth</qualifiedname>
        <param>
          <type>double</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="36" column="46" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a9b36475c463a8691f49268ad12255069" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Telemetry::velocityVertical</definition>
        <argsstring>() const</argsstring>
        <name>velocityVertical</name>
        <qualifiedname>Networking::Telemetry::velocityVertical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="37" column="21" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1aa699d6a772a9cc7e024768253b9b8d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setVelocityVertical</definition>
        <argsstring>(double)</argsstring>
        <name>setVelocityVertical</name>
        <qualifiedname>Networking::Telemetry::setVelocityVertical</qualifiedname>
        <param>
          <type>double</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="37" column="49" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a9bd95cb574544d621585adc3a6d1aa3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Telemetry::pitch</definition>
        <argsstring>() const</argsstring>
        <name>pitch</name>
        <qualifiedname>Networking::Telemetry::pitch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="38" column="21" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a4860045d9227b227fc40004b3d70da93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setPitch</definition>
        <argsstring>(double)</argsstring>
        <name>setPitch</name>
        <qualifiedname>Networking::Telemetry::setPitch</qualifiedname>
        <param>
          <type>double</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="38" column="38" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1aefd551ee374ef9da650a472338079420" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Telemetry::roll</definition>
        <argsstring>() const</argsstring>
        <name>roll</name>
        <qualifiedname>Networking::Telemetry::roll</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="39" column="21" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1ac7a01573c35e8f1e6012033e64958706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setRoll</definition>
        <argsstring>(double)</argsstring>
        <name>setRoll</name>
        <qualifiedname>Networking::Telemetry::setRoll</qualifiedname>
        <param>
          <type>double</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="39" column="37" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1ad2b6be7d858c42f4c518455d37080944" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Telemetry::yaw</definition>
        <argsstring>() const</argsstring>
        <name>yaw</name>
        <qualifiedname>Networking::Telemetry::yaw</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="40" column="21" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a6ebc75806e5187c7361454d4c8cbd113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setYaw</definition>
        <argsstring>(double)</argsstring>
        <name>setYaw</name>
        <qualifiedname>Networking::Telemetry::setYaw</qualifiedname>
        <param>
          <type>double</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="40" column="36" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a5d878b9e73d8192e2558b41664c81cdb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Telemetry::course</definition>
        <argsstring>() const</argsstring>
        <name>course</name>
        <qualifiedname>Networking::Telemetry::course</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="41" column="21" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1ae771d155235977d40aec80e3d19d4553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setCourse</definition>
        <argsstring>(double)</argsstring>
        <name>setCourse</name>
        <qualifiedname>Networking::Telemetry::setCourse</qualifiedname>
        <param>
          <type>double</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="41" column="39" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a6d647c7f5fd5f64bf8bbcd970baf7657" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t Telemetry::time</definition>
        <argsstring>() const</argsstring>
        <name>time</name>
        <qualifiedname>Networking::Telemetry::time</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="42" column="23" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1ae10a03808d0acedb3c6b825d9d3e208a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setTime</definition>
        <argsstring>(const uint64_t &amp;)</argsstring>
        <name>setTime</name>
        <qualifiedname>Networking::Telemetry::setTime</qualifiedname>
        <param>
          <type>const uint64_t &amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="42" column="39" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a7e21b484f205ef15f2878956a63a498d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Telemetry::satellites</definition>
        <argsstring>() const</argsstring>
        <name>satellites</name>
        <qualifiedname>Networking::Telemetry::satellites</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="43" column="18" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a642f75ac4a1bae2e536b0d32763f578a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setSatellites</definition>
        <argsstring>(int)</argsstring>
        <name>setSatellites</name>
        <qualifiedname>Networking::Telemetry::setSatellites</qualifiedname>
        <param>
          <type>int</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="43" column="40" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a84f7a16113d97bf832a025333c434113" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Telemetry::seaLevel</definition>
        <argsstring>() const</argsstring>
        <name>seaLevel</name>
        <qualifiedname>Networking::Telemetry::seaLevel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="44" column="21" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1Telemetry_1a17a97240bd12583da10f98a4ebffaf5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Telemetry::setSeaLevel</definition>
        <argsstring>(double)</argsstring>
        <name>setSeaLevel</name>
        <qualifiedname>Networking::Telemetry::setSeaLevel</qualifiedname>
        <param>
          <type>double</type>
          <defname>o</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="44" column="41" bodyfile="src/c++/network/telemetry/telemetry.c++" bodystart="105" bodyend="110"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1a8f712e451432ca920348781a197cec28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::latitudeChanged</definition>
        <argsstring>()</argsstring>
        <name>latitudeChanged</name>
        <qualifiedname>Networking::Telemetry::latitudeChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="47" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1a23e5dd54f73936c3e1a1a479b06d21f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::longitudeChanged</definition>
        <argsstring>()</argsstring>
        <name>longitudeChanged</name>
        <qualifiedname>Networking::Telemetry::longitudeChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="48" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1a8f8cdeae8fbb9436b74ee20f53409314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::altitudeChanged</definition>
        <argsstring>()</argsstring>
        <name>altitudeChanged</name>
        <qualifiedname>Networking::Telemetry::altitudeChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="49" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1a88104ed8c54297e41c8a55af45a737d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::velocityCourseChanged</definition>
        <argsstring>()</argsstring>
        <name>velocityCourseChanged</name>
        <qualifiedname>Networking::Telemetry::velocityCourseChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="50" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1a5d92c1d0f09da352039d1bf0348014df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::velocityEastChanged</definition>
        <argsstring>()</argsstring>
        <name>velocityEastChanged</name>
        <qualifiedname>Networking::Telemetry::velocityEastChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="51" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1ae18bd3b302cbf7ed0c2ae903fbfc67bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::velocityNorthChanged</definition>
        <argsstring>()</argsstring>
        <name>velocityNorthChanged</name>
        <qualifiedname>Networking::Telemetry::velocityNorthChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="52" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1aeafd4aecc0d413f9b45b8fe5673bb756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::velocityVerticalChanged</definition>
        <argsstring>()</argsstring>
        <name>velocityVerticalChanged</name>
        <qualifiedname>Networking::Telemetry::velocityVerticalChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="53" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1abb7687ecc94299df16ba6f16c80e4535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::pitchChanged</definition>
        <argsstring>()</argsstring>
        <name>pitchChanged</name>
        <qualifiedname>Networking::Telemetry::pitchChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="54" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1ad85bfd71ab1f07801a871989ff9e95e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::rollChanged</definition>
        <argsstring>()</argsstring>
        <name>rollChanged</name>
        <qualifiedname>Networking::Telemetry::rollChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="55" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1a6b7f48fa61e4ae1965fd3a3c3f28fc41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::yawChanged</definition>
        <argsstring>()</argsstring>
        <name>yawChanged</name>
        <qualifiedname>Networking::Telemetry::yawChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="56" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1ae3217a55be9ac39efad57f0655d57a9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::courseChanged</definition>
        <argsstring>()</argsstring>
        <name>courseChanged</name>
        <qualifiedname>Networking::Telemetry::courseChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="57" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1a4071176d25c1df0c20a44afe348fbca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::timeChanged</definition>
        <argsstring>()</argsstring>
        <name>timeChanged</name>
        <qualifiedname>Networking::Telemetry::timeChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="58" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1aed6ef1d825e91d700de627886612ab0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::satellitesChanged</definition>
        <argsstring>()</argsstring>
        <name>satellitesChanged</name>
        <qualifiedname>Networking::Telemetry::satellitesChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="59" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1Telemetry_1a08f957b618008051ed63d375cd416dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::Telemetry::seaLevelChanged</definition>
        <argsstring>()</argsstring>
        <name>seaLevelChanged</name>
        <qualifiedname>Networking::Telemetry::seaLevelChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetry.h" line="60" column="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Networking::Telemetry</label>
        <link refid="classNetworking_1_1Telemetry"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Networking::Telemetry</label>
        <link refid="classNetworking_1_1Telemetry"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="src/c++/network/telemetry/telemetry.h" line="10" column="5" bodyfile="src/c++/network/telemetry/telemetry.h" bodystart="11" bodyend="66"/>
    <listofallmembers>
      <member refid="classNetworking_1_1Telemetry_1aecae2a24dec3b63d939a542dea6412a1" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>altitude</name></member>
      <member refid="classNetworking_1_1Telemetry_1aba9568ec79757b74cf27518cd7fac551" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>altitude</name></member>
      <member refid="classNetworking_1_1Telemetry_1a8f8cdeae8fbb9436b74ee20f53409314" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>altitudeChanged</name></member>
      <member refid="classNetworking_1_1Telemetry_1a0308809fdedf4128033ca0112e9a118e" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>course</name></member>
      <member refid="classNetworking_1_1Telemetry_1a5d878b9e73d8192e2558b41664c81cdb" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>course</name></member>
      <member refid="classNetworking_1_1Telemetry_1ae3217a55be9ac39efad57f0655d57a9c" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>courseChanged</name></member>
      <member refid="classNetworking_1_1Telemetry_1a04867385b4cbc23eba7ceafb691b5660" prot="private" virt="non-virtual"><scope>Networking::Telemetry</scope><name>datagram</name></member>
      <member refid="classNetworking_1_1Telemetry_1a0ff261883ed75d6adedba4c3bc880993" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>latitude</name></member>
      <member refid="classNetworking_1_1Telemetry_1aa80a1dc3173378c2db6210418d9995e3" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>latitude</name></member>
      <member refid="classNetworking_1_1Telemetry_1a8f712e451432ca920348781a197cec28" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>latitudeChanged</name></member>
      <member refid="classNetworking_1_1Telemetry_1a35b8cf94f4f2dbba629edcca354cc552" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>longitude</name></member>
      <member refid="classNetworking_1_1Telemetry_1a341a054594c119b92b61f26615b34698" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>longitude</name></member>
      <member refid="classNetworking_1_1Telemetry_1a23e5dd54f73936c3e1a1a479b06d21f9" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>longitudeChanged</name></member>
      <member refid="classNetworking_1_1Telemetry_1a513b3feb71383a04508d20b5000284a8" prot="private" virt="non-virtual"><scope>Networking::Telemetry</scope><name>m_datetime</name></member>
      <member refid="classNetworking_1_1Telemetry_1ab67e84b0fefb6622112f00f725e28168" prot="private" virt="non-virtual"><scope>Networking::Telemetry</scope><name>m_seaLevel</name></member>
      <member refid="classNetworking_1_1Telemetry_1a7c8c130ce73576e9a331df7c2db5d56d" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>pitch</name></member>
      <member refid="classNetworking_1_1Telemetry_1a9bd95cb574544d621585adc3a6d1aa3e" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>pitch</name></member>
      <member refid="classNetworking_1_1Telemetry_1abb7687ecc94299df16ba6f16c80e4535" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>pitchChanged</name></member>
      <member refid="classNetworking_1_1Telemetry_1a5f522ba2a1e1275e4649b074bb1b95a0" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>roll</name></member>
      <member refid="classNetworking_1_1Telemetry_1aefd551ee374ef9da650a472338079420" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>roll</name></member>
      <member refid="classNetworking_1_1Telemetry_1ad85bfd71ab1f07801a871989ff9e95e8" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>rollChanged</name></member>
      <member refid="classNetworking_1_1Telemetry_1a1ea75d5d4218d65d209a534ed712e309" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>satellites</name></member>
      <member refid="classNetworking_1_1Telemetry_1a7e21b484f205ef15f2878956a63a498d" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>satellites</name></member>
      <member refid="classNetworking_1_1Telemetry_1aed6ef1d825e91d700de627886612ab0c" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>satellitesChanged</name></member>
      <member refid="classNetworking_1_1Telemetry_1a09791576323f2d24a15ad2a4bf257565" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>seaLevel</name></member>
      <member refid="classNetworking_1_1Telemetry_1a84f7a16113d97bf832a025333c434113" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>seaLevel</name></member>
      <member refid="classNetworking_1_1Telemetry_1a08f957b618008051ed63d375cd416dd7" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>seaLevelChanged</name></member>
      <member refid="classNetworking_1_1Telemetry_1aa45d462e6ed7c42bd68df54cb64e1388" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setAltitude</name></member>
      <member refid="classNetworking_1_1Telemetry_1ae771d155235977d40aec80e3d19d4553" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setCourse</name></member>
      <member refid="classNetworking_1_1Telemetry_1af7866d05c4feb9749c48638f06e92df6" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setLatitude</name></member>
      <member refid="classNetworking_1_1Telemetry_1a8ec620f687db888baac712d5ddd82354" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setLongitude</name></member>
      <member refid="classNetworking_1_1Telemetry_1a4860045d9227b227fc40004b3d70da93" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setPitch</name></member>
      <member refid="classNetworking_1_1Telemetry_1ac7a01573c35e8f1e6012033e64958706" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setRoll</name></member>
      <member refid="classNetworking_1_1Telemetry_1a642f75ac4a1bae2e536b0d32763f578a" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setSatellites</name></member>
      <member refid="classNetworking_1_1Telemetry_1a17a97240bd12583da10f98a4ebffaf5c" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setSeaLevel</name></member>
      <member refid="classNetworking_1_1Telemetry_1ae10a03808d0acedb3c6b825d9d3e208a" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setTime</name></member>
      <member refid="classNetworking_1_1Telemetry_1a2e2d142c8226574174f4088fec6b507f" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setVelocityCourse</name></member>
      <member refid="classNetworking_1_1Telemetry_1ac07ac2fc21d3b0295e7a5a86c0b37510" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setVelocityEast</name></member>
      <member refid="classNetworking_1_1Telemetry_1af32eb260db79e653e31949ad360a31e5" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setVelocityNorth</name></member>
      <member refid="classNetworking_1_1Telemetry_1aa699d6a772a9cc7e024768253b9b8d38" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setVelocityVertical</name></member>
      <member refid="classNetworking_1_1Telemetry_1a6ebc75806e5187c7361454d4c8cbd113" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>setYaw</name></member>
      <member refid="classNetworking_1_1Telemetry_1a521b1fa4c36547d90f69846e65ae7ed5" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>Telemetry</name></member>
      <member refid="classNetworking_1_1Telemetry_1aa9eb08284d56832c407e23e76d6c611e" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>time</name></member>
      <member refid="classNetworking_1_1Telemetry_1a6d647c7f5fd5f64bf8bbcd970baf7657" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>time</name></member>
      <member refid="classNetworking_1_1Telemetry_1a4071176d25c1df0c20a44afe348fbca2" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>timeChanged</name></member>
      <member refid="classNetworking_1_1Telemetry_1ae43928bd31e6eb3c105e78e0535f07b3" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>velocityCourse</name></member>
      <member refid="classNetworking_1_1Telemetry_1ae5fb4199b0dd262a136156ea7ad41ec6" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>velocityCourse</name></member>
      <member refid="classNetworking_1_1Telemetry_1a88104ed8c54297e41c8a55af45a737d5" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>velocityCourseChanged</name></member>
      <member refid="classNetworking_1_1Telemetry_1a20721f52a9e741c69f4bc8508c1d130d" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>velocityEast</name></member>
      <member refid="classNetworking_1_1Telemetry_1aeaec66d9070a955df28e0be5863e39f5" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>velocityEast</name></member>
      <member refid="classNetworking_1_1Telemetry_1a5d92c1d0f09da352039d1bf0348014df" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>velocityEastChanged</name></member>
      <member refid="classNetworking_1_1Telemetry_1a5e924120b7b030fa156560c6da4ad600" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>velocityNorth</name></member>
      <member refid="classNetworking_1_1Telemetry_1a1fa84be7e07ccb570c39f1c6f90bebf3" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>velocityNorth</name></member>
      <member refid="classNetworking_1_1Telemetry_1ae18bd3b302cbf7ed0c2ae903fbfc67bb" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>velocityNorthChanged</name></member>
      <member refid="classNetworking_1_1Telemetry_1ab3b02a4a46f2aa989e89590afabe2747" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>velocityVertical</name></member>
      <member refid="classNetworking_1_1Telemetry_1a9b36475c463a8691f49268ad12255069" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>velocityVertical</name></member>
      <member refid="classNetworking_1_1Telemetry_1aeafd4aecc0d413f9b45b8fe5673bb756" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>velocityVerticalChanged</name></member>
      <member refid="classNetworking_1_1Telemetry_1a8234a1aa99742a7ccc457c3966a576dc" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>yaw</name></member>
      <member refid="classNetworking_1_1Telemetry_1ad2b6be7d858c42f4c518455d37080944" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>yaw</name></member>
      <member refid="classNetworking_1_1Telemetry_1a6b7f48fa61e4ae1965fd3a3c3f28fc41" prot="public" virt="non-virtual"><scope>Networking::Telemetry</scope><name>yawChanged</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
