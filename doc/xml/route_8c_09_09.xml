<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="route_8c_09_09" kind="file" language="C++">
    <compoundname>route.c++</compoundname>
    <includes refid="route_8h" local="yes">route.h</includes>
    <includes refid="routelogger_8h" local="yes">tools/routelogger.h</includes>
    <includes local="no">QtCore/QFile</includes>
    <includes local="no">QtCore/QDebug</includes>
    <includes local="no">QtPositioning/QGeoCoordinate</includes>
    <incdepgraph>
      <node id="1">
        <label>src/c++/map/route.c++</label>
        <link refid="route_8c_09_09"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>route.h</label>
        <link refid="route_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>tools/routelogger.h</label>
        <link refid="routelogger_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>QtCore/QDebug</label>
      </node>
      <node id="6">
        <label>QtCore/QFile</label>
      </node>
      <node id="3">
        <label>QtCore/QObject</label>
      </node>
      <node id="4">
        <label>QtCore/QVariantList</label>
      </node>
      <node id="8">
        <label>QtPositioning/QGeoCoordinate</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="route_8h" kindref="compound">route.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="routelogger_8h" kindref="compound">tools/routelogger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QFile&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QDebug&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtPositioning/QGeoCoordinate&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceMap" kindref="compound">Map</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="classMap_1_1Route_1ae8811429c2d3c5bb4cdfc5ee0d918ccd" kindref="member">Route::Route</ref>(QObject*<sp/>parent)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject{parent}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>logger(new<sp/><ref refid="classMap_1_1RouteLogger" kindref="compound">RouteLogger</ref>(this))</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="classMap_1_1Route_1a41212532f2bce3298d8f9468f82c62ab" kindref="member">Route::~Route</ref>()</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>logger-&gt;<ref refid="classMap_1_1RouteLogger_1a438418eb317b1235bc80f974d597938a" kindref="member">commit</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMap_1_1Route_1aabe80ffef9b6b74871416e441b5b7807" kindref="member">Route::append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QGeoCoordinate&amp;<sp/>coord,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>speed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>satellites)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>created_log<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_fullRoute.empty()<sp/>and<sp/>not<sp/>created_log)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;<ref refid="classMap_1_1RouteLogger_1a572f2e44ea4738abb60977b0b153dcb6" kindref="member">createLog</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>created_log<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger-&gt;<ref refid="classMap_1_1RouteLogger_1af01429ad7890e7c76ac2a1a7f3f66f49" kindref="member">current_file</ref>)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;<ref refid="classMap_1_1RouteLogger_1a434684fb75d657d938bfc526c21f4632" kindref="member">append</ref>(coord,<sp/>speed,<sp/>satellites);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(coord.latitude()<sp/>==<sp/>0<sp/>or<sp/>coord.longitude()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fullRoute.push_back(QVariant::fromValue(coord));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMap_1_1Route_1ad11edae25bf4fa22283d39fcd682c7c2" kindref="member">fullRouteChanged</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_recentRoute.size()<sp/>&gt;=<sp/>RECENT_ROUTE_SIZE)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_recentRoute.pop_front();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m_recentRoute.push_back(QVariant::fromValue(coord));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMap_1_1Route_1a43cd6107e9efb87022938144f0bfce6f" kindref="member">recentRouteChanged</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMap_1_1Route_1abe728e3e58d3bb6d94665f8dd4caa761" kindref="member">Route::clear</ref>()</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classMap_1_1Route_1a723fb456d59b58d8a1d8ba6076d7678d" kindref="member">fullRoute</ref>().empty())<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[ROUTE]<sp/>Tried<sp/>to<sp/>clear<sp/>empty<sp/>track&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMap_1_1Route_1a0c8d155d20363552b0ed1c901e410e74" kindref="member">setFullRoute</ref>(QVariantList());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMap_1_1Route_1a10a3b3740bbe39ad57d1174f6b8b29f3" kindref="member">setRecentRoute</ref>(QVariantList());</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>logger-&gt;<ref refid="classMap_1_1RouteLogger_1a438418eb317b1235bc80f974d597938a" kindref="member">commit</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">QVariantList<sp/><ref refid="classMap_1_1Route_1a723fb456d59b58d8a1d8ba6076d7678d" kindref="member">Route::fullRoute</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_fullRoute;<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMap_1_1Route_1a0c8d155d20363552b0ed1c901e410e74" kindref="member">Route::setFullRoute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariantList&amp;<sp/>other)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_fullRoute<sp/>==<sp/>other)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fullRoute<sp/>=<sp/>other;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMap_1_1Route_1ad11edae25bf4fa22283d39fcd682c7c2" kindref="member">fullRouteChanged</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">QVariantList<sp/><ref refid="classMap_1_1Route_1a9fb9c265616ad260cc9a24ccb2ffdb0c" kindref="member">Route::recentRoute</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_recentRoute;<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMap_1_1Route_1a10a3b3740bbe39ad57d1174f6b8b29f3" kindref="member">Route::setRecentRoute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariantList&amp;<sp/>other)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_recentRoute<sp/>==<sp/>other)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>m_recentRoute<sp/>=<sp/>other;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classMap_1_1Route_1a43cd6107e9efb87022938144f0bfce6f" kindref="member">recentRouteChanged</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/c++/map/route.c++"/>
  </compounddef>
</doxygen>
