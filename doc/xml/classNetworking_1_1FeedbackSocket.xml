<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classNetworking_1_1FeedbackSocket" kind="class" language="C++" prot="public">
    <compoundname>Networking::FeedbackSocket</compoundname>
    <basecompoundref refid="classNetworking_1_1AbstractUDPSocket" prot="public" virt="non-virtual">Networking::AbstractUDPSocket</basecompoundref>
    <includes refid="feedbacksocket_8h" local="no">feedbacksocket.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classNetworking_1_1FeedbackSocket_1a6ce788af47e49ddba9e9310bf320b0c8" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* Networking::FeedbackSocket::STORAGE_STATUS_MARKER</definition>
        <argsstring></argsstring>
        <name>STORAGE_STATUS_MARKER</name>
        <qualifiedname>Networking::FeedbackSocket::STORAGE_STATUS_MARKER</qualifiedname>
        <initializer>= &quot;*FREE_DISK_SPACE*&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/feedbacksocket.h" line="11" column="37" bodyfile="src/c++/network/execd/feedbacksocket.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classNetworking_1_1FeedbackSocket_1a01f8ebac655964fc549de0dbbf6d26c8" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>FeedbackSocket::FeedbackSocket</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>FeedbackSocket</name>
        <qualifiedname>Networking::FeedbackSocket::FeedbackSocket</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/feedbacksocket.h" line="14" column="22" bodyfile="src/c++/network/execd/feedbacksocket.c++" bodystart="5" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1FeedbackSocket_1a832076e093faa9849eaf281f2f9a1c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FeedbackSocket::start</definition>
        <argsstring>(const QString &amp;address)</argsstring>
        <name>start</name>
        <qualifiedname>Networking::FeedbackSocket::start</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/feedbacksocket.h" line="16" column="18" bodyfile="src/c++/network/execd/feedbacksocket.c++" bodystart="11" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1FeedbackSocket_1a0b914fd9a70cef96f8139823a3951943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FeedbackSocket::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>Networking::FeedbackSocket::stop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/feedbacksocket.h" line="17" column="18" bodyfile="src/c++/network/execd/feedbacksocket.c++" bodystart="17" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="classNetworking_1_1FeedbackSocket_1a067dad9137b11c7fc4f6b1a6a6b1d501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::FeedbackSocket::textReceived</definition>
        <argsstring>(QByteArray text)</argsstring>
        <name>textReceived</name>
        <qualifiedname>Networking::FeedbackSocket::textReceived</qualifiedname>
        <param>
          <type>QByteArray</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/feedbacksocket.h" line="20" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classNetworking_1_1FeedbackSocket_1a722f96da1800fecc9d8756a6292c4d57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::FeedbackSocket::diskSpaceReceived</definition>
        <argsstring>(long free, long total)</argsstring>
        <name>diskSpaceReceived</name>
        <qualifiedname>Networking::FeedbackSocket::diskSpaceReceived</qualifiedname>
        <param>
          <type>long</type>
          <declname>free</declname>
        </param>
        <param>
          <type>long</type>
          <declname>total</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/feedbacksocket.h" line="21" column="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-slot">
      <memberdef kind="slot" id="classNetworking_1_1FeedbackSocket_1a7579be415359cbe4e591e72dd8f3522e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FeedbackSocket::processResult</definition>
        <argsstring>(QByteArray data)</argsstring>
        <name>processResult</name>
        <qualifiedname>Networking::FeedbackSocket::processResult</qualifiedname>
        <param>
          <type>QByteArray</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/feedbacksocket.h" line="25" column="22" bodyfile="src/c++/network/execd/feedbacksocket.c++" bodystart="23" bodyend="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Networking::AbstractUDPSocket</label>
        <link refid="classNetworking_1_1AbstractUDPSocket"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Networking::FeedbackSocket</label>
        <link refid="classNetworking_1_1FeedbackSocket"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QUdpSocket</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Networking::AbstractUDPSocket</label>
        <link refid="classNetworking_1_1AbstractUDPSocket"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Networking::FeedbackSocket</label>
        <link refid="classNetworking_1_1FeedbackSocket"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QUdpSocket</label>
      </node>
    </collaborationgraph>
    <location file="src/c++/network/execd/feedbacksocket.h" line="7" column="5" bodyfile="src/c++/network/execd/feedbacksocket.h" bodystart="8" bodyend="26"/>
    <listofallmembers>
      <member refid="classNetworking_1_1AbstractUDPSocket_1a7e66254d00af9f1d387c3926431d80ed" prot="public" virt="non-virtual"><scope>Networking::FeedbackSocket</scope><name>AbstractUDPSocket</name></member>
      <member refid="classNetworking_1_1AbstractUDPSocket_1ab60a7a8b141cbdfa5a49448ef06425e9" prot="public" virt="virtual"><scope>Networking::FeedbackSocket</scope><name>connect</name></member>
      <member refid="classNetworking_1_1AbstractUDPSocket_1ace97f4f1318099d3b0203d7cdaa263cb" prot="public" virt="virtual"><scope>Networking::FeedbackSocket</scope><name>disconnect</name></member>
      <member refid="classNetworking_1_1FeedbackSocket_1a722f96da1800fecc9d8756a6292c4d57" prot="public" virt="non-virtual"><scope>Networking::FeedbackSocket</scope><name>diskSpaceReceived</name></member>
      <member refid="classNetworking_1_1FeedbackSocket_1a01f8ebac655964fc549de0dbbf6d26c8" prot="public" virt="non-virtual"><scope>Networking::FeedbackSocket</scope><name>FeedbackSocket</name></member>
      <member refid="classNetworking_1_1AbstractUDPSocket_1a9b994e146dd120c046d2f9c27e4c227b" prot="public" virt="virtual"><scope>Networking::FeedbackSocket</scope><name>port</name></member>
      <member refid="classNetworking_1_1FeedbackSocket_1a7579be415359cbe4e591e72dd8f3522e" prot="private" virt="non-virtual"><scope>Networking::FeedbackSocket</scope><name>processResult</name></member>
      <member refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" prot="public" virt="non-virtual"><scope>Networking::FeedbackSocket</scope><name>received</name></member>
      <member refid="classNetworking_1_1AbstractUDPSocket_1a7d82f4942500ed94b2e1887561c07b6b" prot="public" virt="virtual"><scope>Networking::FeedbackSocket</scope><name>send</name></member>
      <member refid="classNetworking_1_1AbstractUDPSocket_1a037b493b3fe30e2dd84425665c1b46ab" prot="public" virt="non-virtual"><scope>Networking::FeedbackSocket</scope><name>socketDisconnected</name></member>
      <member refid="classNetworking_1_1AbstractUDPSocket_1a9a7d3ecfb1cfd71c60c0b7722325fb48" prot="public" virt="non-virtual"><scope>Networking::FeedbackSocket</scope><name>socketMetrics</name></member>
      <member refid="classNetworking_1_1FeedbackSocket_1a832076e093faa9849eaf281f2f9a1c07" prot="public" virt="non-virtual"><scope>Networking::FeedbackSocket</scope><name>start</name></member>
      <member refid="classNetworking_1_1FeedbackSocket_1a0b914fd9a70cef96f8139823a3951943" prot="public" virt="non-virtual"><scope>Networking::FeedbackSocket</scope><name>stop</name></member>
      <member refid="classNetworking_1_1FeedbackSocket_1a6ce788af47e49ddba9e9310bf320b0c8" prot="private" virt="non-virtual"><scope>Networking::FeedbackSocket</scope><name>STORAGE_STATUS_MARKER</name></member>
      <member refid="classNetworking_1_1FeedbackSocket_1a067dad9137b11c7fc4f6b1a6a6b1d501" prot="public" virt="non-virtual"><scope>Networking::FeedbackSocket</scope><name>textReceived</name></member>
      <member refid="classNetworking_1_1AbstractUDPSocket_1abfc6311e3e8219196febf17eb1f57119" prot="public" virt="virtual"><scope>Networking::FeedbackSocket</scope><name>~AbstractUDPSocket</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
