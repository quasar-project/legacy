<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="telemetrysocket_8c_09_09" kind="file" language="C++">
    <compoundname>telemetrysocket.c++</compoundname>
    <includes refid="telemetrysocket_8h" local="yes">telemetrysocket.h</includes>
    <includes refid="telemetry_8h" local="yes">telemetry.h</includes>
    <includes refid="telemetrydatagram_8h" local="yes">telemetrydatagram.h</includes>
    <includes local="no">QtCore/QTimer</includes>
    <includes local="no">QtCore/QDebug</includes>
    <includes local="no">QtCore/QDataStream</includes>
    <includes local="no">LPVL/Math</includes>
    <includes local="no">LPVL/Crypto</includes>
    <incdepgraph>
      <node id="3">
        <label>network/abstractudpsocket.h</label>
        <link refid="abstractudpsocket_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>telemetry.h</label>
        <link refid="telemetry_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>telemetrydatagram.h</label>
        <link refid="telemetrydatagram_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/c++/network/telemetry/telemetrysocket.c++</label>
        <link refid="telemetrysocket_8c_09_09"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>telemetrysocket.h</label>
        <link refid="telemetrysocket_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>LPVL/Crypto</label>
      </node>
      <node id="15">
        <label>LPVL/Math</label>
      </node>
      <node id="4">
        <label>QtCore/QByteArray</label>
      </node>
      <node id="9">
        <label>QtCore/QDataStream</label>
      </node>
      <node id="12">
        <label>QtCore/QDateTime</label>
      </node>
      <node id="14">
        <label>QtCore/QDebug</label>
      </node>
      <node id="11">
        <label>QtCore/QMetaType</label>
      </node>
      <node id="10">
        <label>QtCore/QObject</label>
      </node>
      <node id="13">
        <label>QtCore/QTimer</label>
      </node>
      <node id="5">
        <label>QtNetwork/QUdpSocket</label>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="telemetrysocket_8h" kindref="compound">telemetrysocket.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="telemetry_8h" kindref="compound">telemetry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="telemetrydatagram_8h" kindref="compound">telemetrydatagram.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QTimer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QDebug&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QDataStream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;LPVL/Math&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;LPVL/Crypto&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceNetworking" kindref="compound">Networking</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="classNetworking_1_1TelemetrySocket_1a581733e6fb8057383aacddee6eadc971" kindref="member">TelemetrySocket::TelemetrySocket</ref>(QObject*<sp/>parent,<sp/><ref refid="classNetworking_1_1Telemetry" kindref="compound">Telemetry</ref>*<sp/>output)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classNetworking_1_1AbstractUDPSocket" kindref="compound">AbstractUDPSocket</ref>{parent}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_updateTimer(new<sp/>QTimer(this))</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>output(output)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_requestsock(new<sp/>QUdpSocket(this))</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(m_updateTimer,<sp/>&amp;QTimer::timeout,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;TelemetrySocket::requestTelemetry);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;TelemetrySocket::received,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;TelemetrySocket::processTelemetry);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNetworking_1_1TelemetrySocket_1a81cb00d7ca46bc824e0c855f08c32e96" kindref="member">TelemetrySocket::start</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>address,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>recv_address)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>address.contains(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)<sp/>or<sp/>address.split(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">).size()<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCritical()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[TELEMETRY]<sp/>Provided<sp/>incorrect<sp/>request<sp/>address&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>req_addr<sp/>=<sp/>address.split(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">).first();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>req_port<sp/>=<sp/>address.split(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">).last().toUInt();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>recv_port<sp/>=<sp/>recv_address.split(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">).last().toUInt();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classNetworking_1_1AbstractUDPSocket_1ab60a7a8b141cbdfa5a49448ef06425e9" kindref="member">connect</ref>(recv_address);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;requestTelemetry();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>m_updateTimer-&gt;start((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(30<sp/>*<sp/>1&apos;000));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug().noquote()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[TELEMETRY]<sp/>Started<sp/>reading<sp/>at<sp/>frequency<sp/>of&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>1<sp/>/<sp/><ref refid="classNetworking_1_1TelemetrySocket_1a9ff26fc07e1493f2f23963d171a52235" kindref="member">frequency</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Hz&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNetworking_1_1TelemetrySocket_1a3040f903eacc780d33e211fe0123d3b7" kindref="member">TelemetrySocket::stop</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classNetworking_1_1AbstractUDPSocket_1ace97f4f1318099d3b0203d7cdaa263cb" kindref="member">disconnect</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>m_updateTimer-&gt;stop();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[TELEMETRY]<sp/>Stopped<sp/>reading&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TelemetrySocket::processTelemetry(QByteArray<sp/>data)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="imagemetadata_8h_1a51bdee9eea878b90b917afc0f8c99435" kindref="member">marker</ref><sp/>=<sp/>*(uint32_t*)data.data();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="imagemetadata_8h_1a51bdee9eea878b90b917afc0f8c99435" kindref="member">marker</ref><sp/>!=<sp/>RECV_MARKER_LITTLE)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[TELEMETRY]<sp/>Triggered<sp/>first<sp/>marker<sp/>mismatch&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>QDataStream<sp/>stream(&amp;data,<sp/>ReadOnly);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>stream.setByteOrder(QDataStream::BigEndian);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structNetworking_1_1TelemetryDatagram" kindref="compound">TelemetryDatagram</ref><sp/><ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/><ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.marker<sp/>!=<sp/>RECV_MARKER_BIG)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[TELEMETRY]<sp/>Triggered<sp/>second<sp/>marker<sp/>mismatch&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="classNetworking_1_1Telemetry_1af7866d05c4feb9749c48638f06e92df6" kindref="member">setLatitude</ref>(LPVL::rad2deg(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.latitude));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="classNetworking_1_1Telemetry_1a8ec620f687db888baac712d5ddd82354" kindref="member">setLongitude</ref>(LPVL::rad2deg(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.longitude));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="classNetworking_1_1Telemetry_1aa45d462e6ed7c42bd68df54cb64e1388" kindref="member">setAltitude</ref>(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.altitude);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="classNetworking_1_1Telemetry_1a2e2d142c8226574174f4088fec6b507f" kindref="member">setVelocityCourse</ref>(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.velocity_course<sp/>*<sp/>3.6);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="classNetworking_1_1Telemetry_1ac07ac2fc21d3b0295e7a5a86c0b37510" kindref="member">setVelocityEast</ref>(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.velocity_east<sp/>*<sp/>3.6);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="classNetworking_1_1Telemetry_1af32eb260db79e653e31949ad360a31e5" kindref="member">setVelocityNorth</ref>(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.velocity_north<sp/>*<sp/>3.6);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="classNetworking_1_1Telemetry_1a2e2d142c8226574174f4088fec6b507f" kindref="member">setVelocityCourse</ref>(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.velocity_course<sp/>*<sp/>3.6);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="classNetworking_1_1Telemetry_1a4860045d9227b227fc40004b3d70da93" kindref="member">setPitch</ref>(LPVL::rad2deg(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.pitch));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="classNetworking_1_1Telemetry_1ac7a01573c35e8f1e6012033e64958706" kindref="member">setRoll</ref>(LPVL::rad2deg(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.roll));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="classNetworking_1_1Telemetry_1a6ebc75806e5187c7361454d4c8cbd113" kindref="member">setYaw</ref>(LPVL::rad2deg(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.yaw));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="classNetworking_1_1Telemetry_1ae771d155235977d40aec80e3d19d4553" kindref="member">setCourse</ref>(LPVL::rad2deg(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.course));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="classNetworking_1_1Telemetry_1ae10a03808d0acedb3c6b825d9d3e208a" kindref="member">setTime</ref>(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.time);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="classNetworking_1_1Telemetry_1a642f75ac4a1bae2e536b0d32763f578a" kindref="member">setSatellites</ref>(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.satellites<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>crc<sp/>=<sp/>CRC_CHECK<sp/>?<sp/>LPVL::crc16_ccitt((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structNetworking_1_1TelemetryDatagram" kindref="compound">Networking::TelemetryDatagram</ref>)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t))</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.crc16;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(crc<sp/>!=<sp/><ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.crc16)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning().noquote().nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[TELSOCK]<sp/>Checksum<sp/>mismatch<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>crc<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.crc16<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classNetworking_1_1AbstractUDPSocket_1a9a7d3ecfb1cfd71c60c0b7722325fb48" kindref="member">socketMetrics</ref>(</highlight><highlight class="stringliteral">&quot;0x&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.marker,<sp/>16)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.version)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.latitude,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>7)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.longitude,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>7)<sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.altitude,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>2)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.velocity_course,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.velocity_east,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.velocity_north,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.velocity_vertical,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.pitch,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>2)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.roll,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>2)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.yaw,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>2)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.course,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>2)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.time)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.satellites)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>0x&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>.crc16,<sp/>16),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classNetworking_1_1AbstractUDPSocket_1ab2de359309489c42d98134e42d48a8df" kindref="member">received</ref>),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classNetworking_1_1TelemetrySocket_1a4619edf9201c550f007fd5223e5208b7" kindref="member">ping</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TelemetrySocket::requestTelemetry()</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>buffer;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>QDataStream<sp/>stream(&amp;buffer,<sp/>QIODevice::WriteOnly);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>stream.setByteOrder(QDataStream::BigEndian);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>stream.setFloatingPointPrecision(QDataStream::DoublePrecision);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structNetworking_1_1TelemetryRequest" kindref="compound">TelemetryRequest</ref><sp/>request<sp/>=<sp/>{<sp/>MARKER,<sp/>0x01,<sp/>(uint16_t)(recv_port),<sp/>(uint32_t)(this-&gt;<ref refid="classNetworking_1_1TelemetrySocket_1a9ff26fc07e1493f2f23963d171a52235" kindref="member">frequency</ref>()<sp/>*<sp/>1&apos;000),<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>crc<sp/>=<sp/>LPVL::crc16_ccitt((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;request,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structNetworking_1_1TelemetryRequest" kindref="compound">TelemetryRequest</ref>)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>request.crc16<sp/>=<sp/>crc;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>request;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>m_requestsock-&gt;writeDatagram(buffer,<sp/>QHostAddress(req_addr),<sp/>req_port);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classNetworking_1_1AbstractUDPSocket_1a9a7d3ecfb1cfd71c60c0b7722325fb48" kindref="member">socketMetrics</ref>(</highlight><highlight class="stringliteral">&quot;0x&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(request.marker,<sp/>16)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(request.init_flag)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>QString::number(request.port)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(request.interval_ms)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>0x&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(request.crc16,<sp/>16),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(request),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classNetworking_1_1TelemetrySocket_1a9ff26fc07e1493f2f23963d171a52235" kindref="member">TelemetrySocket::frequency</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_frequency;<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNetworking_1_1TelemetrySocket_1a3fa9938595b1d4ab038db92ed71b7c7d" kindref="member">TelemetrySocket::setFrequency</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qFuzzyCompare(m_frequency,<sp/>other))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>m_frequency<sp/>=<sp/>other;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classNetworking_1_1TelemetrySocket_1a2486b4ee0bd2b1b1c89ad92d7243e9cc" kindref="member">frequencyChanged</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/c++/network/telemetry/telemetrysocket.c++"/>
  </compounddef>
</doxygen>
