<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classOS_1_1Filesystem" kind="class" language="C++" prot="public">
    <compoundname>OS::Filesystem</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="filesystem_8h" local="no">filesystem.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classOS_1_1Filesystem_1a06da0b49aace850fe0ad5568b4ebcf5d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOS_1_1Filesystem" kindref="compound">Filesystem</ref> *</type>
        <definition>Filesystem * Filesystem::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <qualifiedname>OS::Filesystem::get</qualifiedname>
        <briefdescription>
<para>Returns singleton instance of class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/filesystem/filesystem.h" line="18" column="31" bodyfile="src/c++/filesystem/filesystem.c++" bodystart="17" bodyend="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOS_1_1Filesystem_1a889b2efb50aadd1c839387af9d144286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE bool</type>
        <definition>bool Filesystem::fetchImageDirectory</definition>
        <argsstring>()</argsstring>
        <name>fetchImageDirectory</name>
        <qualifiedname>OS::Filesystem::fetchImageDirectory</qualifiedname>
        <briefdescription>
<para>Searches for image files in application cache directory. </para>
        </briefdescription>
        <detaileddescription>
<para>Ignores occurences, already present in model. Can be invoked from QML. <simplesect kind="see"><para>Emits <ref refid="classOS_1_1Filesystem_1af0e7b7cd3843d9fb51d2104313acab7d" kindref="member">imageListCached()</ref> - signal, which holds list of filenames, marked for processing. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/filesystem/filesystem.h" line="26" column="30" bodyfile="src/c++/filesystem/filesystem.c++" bodystart="19" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classOS_1_1Filesystem_1adc982673f354d07bd090001db0366f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE void</type>
        <definition>void Filesystem::fetchTCPCache</definition>
        <argsstring>()</argsstring>
        <name>fetchTCPCache</name>
        <qualifiedname>OS::Filesystem::fetchTCPCache</qualifiedname>
        <briefdescription>
<para>Searches for image files in application TCP-IO cache directory. </para>
        </briefdescription>
        <detaileddescription>
<para>Ignores occurences, already present in model. Can be invoked from QML. <simplesect kind="see"><para>Emits <ref refid="classOS_1_1Filesystem_1af0e7b7cd3843d9fb51d2104313acab7d" kindref="member">imageListCached()</ref> - signal, which holds list of filenames, marked for processing. </para>
</simplesect>
<simplesect kind="note"><para>(WIP) Replaces occurence, found in model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/filesystem/filesystem.h" line="35" column="30" bodyfile="src/c++/filesystem/filesystem.c++" bodystart="53" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-slot">
      <memberdef kind="slot" id="classOS_1_1Filesystem_1a4f328a31b08d4408810bdeaf8dbfa462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Filesystem::exportImagesToFolder</definition>
        <argsstring>(const QList&lt; QString &gt; &amp;ls, const QString &amp;folder)</argsstring>
        <name>exportImagesToFolder</name>
        <qualifiedname>OS::Filesystem::exportImagesToFolder</qualifiedname>
        <param>
          <type>const QList&lt; QString &gt; &amp;</type>
          <declname>ls</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>folder</declname>
        </param>
        <briefdescription>
<para>Exports given list of filenames in LOD0 cache to specified folder. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ls</parametername>
</parameternamelist>
<parameterdescription>
<para>- list of filenames to export. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>folder</parametername>
</parameternamelist>
<parameterdescription>
<para>- destination folder. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/filesystem/filesystem.h" line="42" column="22" bodyfile="src/c++/filesystem/filesystem.c++" bodystart="90" bodyend="108"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="classOS_1_1Filesystem_1af0e7b7cd3843d9fb51d2104313acab7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS::Filesystem::imageListCached</definition>
        <argsstring>(const QList&lt; QString &gt; &amp;filenames)</argsstring>
        <name>imageListCached</name>
        <qualifiedname>OS::Filesystem::imageListCached</qualifiedname>
        <param>
          <type>const QList&lt; QString &gt; &amp;</type>
          <declname>filenames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/filesystem/filesystem.h" line="45" column="22"/>
      </memberdef>
      <memberdef kind="signal" id="classOS_1_1Filesystem_1a0cd165e54a247c8fdb1eec59ceae6b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS::Filesystem::binaryCached</definition>
        <argsstring>(const QString &amp;filename)</argsstring>
        <name>binaryCached</name>
        <qualifiedname>OS::Filesystem::binaryCached</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/filesystem/filesystem.h" line="46" column="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classOS_1_1Filesystem_1a23cec443ad5eb6ead5b7f454e09fa1a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Filesystem::Filesystem</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>Filesystem</name>
        <qualifiedname>OS::Filesystem::Filesystem</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/filesystem/filesystem.h" line="49" column="13" bodyfile="src/c++/filesystem/filesystem.c++" bodystart="13" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classOS_1_1Filesystem_1a950c4b166e242de486b626d52e1d9d2f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OS::Filesystem::Filesystem</definition>
        <argsstring>(const Filesystem &amp;)</argsstring>
        <name>Filesystem</name>
        <qualifiedname>OS::Filesystem::Filesystem</qualifiedname>
        <param>
          <type>const <ref refid="classOS_1_1Filesystem" kindref="compound">Filesystem</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/filesystem/filesystem.h" line="50" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classOS_1_1Filesystem_1a47272ef26c65f2dd627069fb0cfc57a5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOS_1_1Filesystem" kindref="compound">Filesystem</ref> &amp;</type>
        <definition>Filesystem &amp; OS::Filesystem::operator=</definition>
        <argsstring>(const Filesystem &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>OS::Filesystem::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classOS_1_1Filesystem" kindref="compound">Filesystem</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/filesystem/filesystem.h" line="51" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classOS_1_1Filesystem_1aa909dc7a3e19ad12e4517bc06fca78cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Filesystem::checkOcurrence</definition>
        <argsstring>(QString target_folder, QString filename)</argsstring>
        <name>checkOcurrence</name>
        <qualifiedname>OS::Filesystem::checkOcurrence</qualifiedname>
        <param>
          <type>QString</type>
          <declname>target_folder</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/filesystem/filesystem.h" line="53" column="18" bodyfile="src/c++/filesystem/filesystem.c++" bodystart="110" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classOS_1_1Filesystem_1a1ac2a0d1154fac7ae332491c5ef427b2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; QString &gt;</type>
        <definition>QList&lt; QString &gt; Filesystem::fetchBinaryList</definition>
        <argsstring>()</argsstring>
        <name>fetchBinaryList</name>
        <qualifiedname>OS::Filesystem::fetchBinaryList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/filesystem/filesystem.h" line="55" column="19" bodyfile="src/c++/filesystem/filesystem.c++" bodystart="121" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>OS::Filesystem</label>
        <link refid="classOS_1_1Filesystem"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>OS::Filesystem</label>
        <link refid="classOS_1_1Filesystem"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="src/c++/filesystem/filesystem.h" line="12" column="5" bodyfile="src/c++/filesystem/filesystem.h" bodystart="13" bodyend="56"/>
    <listofallmembers>
      <member refid="classOS_1_1Filesystem_1a0cd165e54a247c8fdb1eec59ceae6b02" prot="public" virt="non-virtual"><scope>OS::Filesystem</scope><name>binaryCached</name></member>
      <member refid="classOS_1_1Filesystem_1aa909dc7a3e19ad12e4517bc06fca78cf" prot="private" virt="non-virtual"><scope>OS::Filesystem</scope><name>checkOcurrence</name></member>
      <member refid="classOS_1_1Filesystem_1a4f328a31b08d4408810bdeaf8dbfa462" prot="public" virt="non-virtual"><scope>OS::Filesystem</scope><name>exportImagesToFolder</name></member>
      <member refid="classOS_1_1Filesystem_1a1ac2a0d1154fac7ae332491c5ef427b2" prot="private" virt="non-virtual"><scope>OS::Filesystem</scope><name>fetchBinaryList</name></member>
      <member refid="classOS_1_1Filesystem_1a889b2efb50aadd1c839387af9d144286" prot="public" virt="non-virtual"><scope>OS::Filesystem</scope><name>fetchImageDirectory</name></member>
      <member refid="classOS_1_1Filesystem_1adc982673f354d07bd090001db0366f1c" prot="public" virt="non-virtual"><scope>OS::Filesystem</scope><name>fetchTCPCache</name></member>
      <member refid="classOS_1_1Filesystem_1a23cec443ad5eb6ead5b7f454e09fa1a1" prot="private" virt="non-virtual"><scope>OS::Filesystem</scope><name>Filesystem</name></member>
      <member refid="classOS_1_1Filesystem_1a950c4b166e242de486b626d52e1d9d2f" prot="private" virt="non-virtual"><scope>OS::Filesystem</scope><name>Filesystem</name></member>
      <member refid="classOS_1_1Filesystem_1a06da0b49aace850fe0ad5568b4ebcf5d" prot="public" virt="non-virtual"><scope>OS::Filesystem</scope><name>get</name></member>
      <member refid="classOS_1_1Filesystem_1af0e7b7cd3843d9fb51d2104313acab7d" prot="public" virt="non-virtual"><scope>OS::Filesystem</scope><name>imageListCached</name></member>
      <member refid="classOS_1_1Filesystem_1a47272ef26c65f2dd627069fb0cfc57a5" prot="private" virt="non-virtual"><scope>OS::Filesystem</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
