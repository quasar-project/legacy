<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classNetworking_1_1ExecdArgumentList" kind="class" language="C++" prot="public">
    <compoundname>Networking::ExecdArgumentList</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="execdargumentlist_8h" local="no">execdargumentlist.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNetworking_1_1ExecdArgumentList_1a7ebe9c1dec5101d88682de27f6882720" prot="private" static="no" mutable="no">
        <type>QMap&lt; QString, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref> &gt;</type>
        <definition>QMap&lt;QString, ExecdArgument&gt; Networking::ExecdArgumentList::defaults</definition>
        <argsstring></argsstring>
        <name>defaults</name>
        <qualifiedname>Networking::ExecdArgumentList::defaults</qualifiedname>
        <initializer>= {
            {&quot;-f&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(&quot;m1&quot;)},            
            {&quot;-m&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(1)},               
            {&quot;-t&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(1.0f)},            
            {&quot;-b&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(0.0f)},            
            {&quot;-e&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(-1.0f)},           
            {&quot;-v&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(-1.0f)},           
            {&quot;-i&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(0)},               
            {&quot;--Ts&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(1.0f)},          
            {&quot;--Tstrip&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(1.0f)},      
            {&quot;--kR&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(1)},             
            {&quot;--kL&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(1)},             
            {&quot;--jq&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(80)},            

            {&quot;--dx&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(1.0f)},          
            {&quot;--dy&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(1.0f)},          
            {&quot;--x0&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(100.0f)},        
            {&quot;--y0&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(0.0f)},          
            {&quot;--lx&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(2&apos;000.0f)},      
            {&quot;--ly&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(400.0f)},        
            {&quot;--ip&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(&quot;./img/&quot;)},      
            {&quot;--remote&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(&quot;None&quot;)},    
            {&quot;--DSP&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(&quot;DSP_FFTW&quot;)},   
            {&quot;--mirror&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(&quot;False&quot;)},   

            {&quot;--e0&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(0.0f)}           
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="34" column="14" bodyfile="src/c++/network/execd/execdargumentlist.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNetworking_1_1ExecdArgumentList_1a30e4a20ce7b4bf5f9c0f7e7d7d04b56b" prot="private" static="no" mutable="no">
        <type>QMap&lt; QString, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref> &gt;</type>
        <definition>QMap&lt;QString, ExecdArgument&gt; Networking::ExecdArgumentList::focus_defaults</definition>
        <argsstring></argsstring>
        <name>focus_defaults</name>
        <qualifiedname>Networking::ExecdArgumentList::focus_defaults</qualifiedname>
        <initializer>= {
            {&quot;-f&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(&quot;m1&quot;)},            
            {&quot;-b&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(0.0f)},            
            {&quot;-e&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(-1.0f)},           
            {&quot;-v&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(-1.0f)},           
            {&quot;--Ts&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(1.0f)},          
            {&quot;--remote&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(&quot;None&quot;)},    
            {&quot;--e0&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(0.0f)},          

            {&quot;--px&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(-1.0f)},         
            {&quot;--py&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(-1.0f)},         
            {&quot;--ls&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(50.0f)},         
            {&quot;--vmin&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(-1.0f)},       
            {&quot;--vmax&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(-1.0f)},       
            {&quot;--ni&quot;, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref>(10)},            
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="63" column="14" bodyfile="src/c++/network/execd/execdargumentlist.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classNetworking_1_1ExecdArgumentList_1acf364b55da5436d3f30274d93e086d57" prot="public" static="no" mutable="no">
        <type>QMap&lt; QString, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref> &gt;</type>
        <definition>QMap&lt;QString, ExecdArgument&gt; Networking::ExecdArgumentList::argument_list</definition>
        <argsstring></argsstring>
        <name>argument_list</name>
        <qualifiedname>Networking::ExecdArgumentList::argument_list</qualifiedname>
        <initializer>= defaults</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="87" column="18" bodyfile="src/c++/network/execd/execdargumentlist.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNetworking_1_1ExecdArgumentList_1ae7a9fa5564f113b5fabb2f4ad9191b41" prot="public" static="no" mutable="no">
        <type>QMap&lt; QString, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref> &gt;</type>
        <definition>QMap&lt;QString, ExecdArgument&gt; Networking::ExecdArgumentList::reform_argument_list</definition>
        <argsstring></argsstring>
        <name>reform_argument_list</name>
        <qualifiedname>Networking::ExecdArgumentList::reform_argument_list</qualifiedname>
        <initializer>= defaults</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="88" column="18" bodyfile="src/c++/network/execd/execdargumentlist.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNetworking_1_1ExecdArgumentList_1a0bccc97084d215db0bdee202560283a1" prot="public" static="no" mutable="no">
        <type>QMap&lt; QString, <ref refid="structNetworking_1_1ExecdArgument" kindref="compound">ExecdArgument</ref> &gt;</type>
        <definition>QMap&lt;QString, ExecdArgument&gt; Networking::ExecdArgumentList::focus_argument_list</definition>
        <argsstring></argsstring>
        <name>focus_argument_list</name>
        <qualifiedname>Networking::ExecdArgumentList::focus_argument_list</qualifiedname>
        <initializer>= focus_defaults</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="89" column="18" bodyfile="src/c++/network/execd/execdargumentlist.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classNetworking_1_1ExecdArgumentList_1a663fb232b540be8fbc0c94fe8dbdcfe4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Networking::ExecdArgumentList::ExecdArgumentList</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>ExecdArgumentList</name>
        <qualifiedname>Networking::ExecdArgumentList::ExecdArgumentList</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="81" column="22" bodyfile="src/c++/network/execd/execdargumentlist.c++" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1ExecdArgumentList_1a5737b4602a442dd36d3223a0877517e7" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString Networking::ExecdArgumentList::getFormArguments</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getFormArguments</name>
        <qualifiedname>Networking::ExecdArgumentList::getFormArguments</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="83" column="21" bodyfile="src/c++/network/execd/execdargumentlist.c++" bodystart="42" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1ExecdArgumentList_1a5f8fb9abf08bfca490746b2ea80c5c1c" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString Networking::ExecdArgumentList::getReformArguments</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getReformArguments</name>
        <qualifiedname>Networking::ExecdArgumentList::getReformArguments</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="84" column="21" bodyfile="src/c++/network/execd/execdargumentlist.c++" bodystart="62" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classNetworking_1_1ExecdArgumentList_1a2a0b69678233e3ace95df86c21f9908e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString Networking::ExecdArgumentList::getFocusArguments</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getFocusArguments</name>
        <qualifiedname>Networking::ExecdArgumentList::getFocusArguments</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="85" column="21" bodyfile="src/c++/network/execd/execdargumentlist.c++" bodystart="82" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Networking::ExecdArgumentList</label>
        <link refid="classNetworking_1_1ExecdArgumentList"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Networking::ExecdArgumentList</label>
        <link refid="classNetworking_1_1ExecdArgumentList"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="src/c++/network/execd/execdargumentlist.h" line="30" column="5" bodyfile="src/c++/network/execd/execdargumentlist.h" bodystart="31" bodyend="90"/>
    <listofallmembers>
      <member refid="classNetworking_1_1ExecdArgumentList_1acf364b55da5436d3f30274d93e086d57" prot="public" virt="non-virtual"><scope>Networking::ExecdArgumentList</scope><name>argument_list</name></member>
      <member refid="classNetworking_1_1ExecdArgumentList_1a7ebe9c1dec5101d88682de27f6882720" prot="private" virt="non-virtual"><scope>Networking::ExecdArgumentList</scope><name>defaults</name></member>
      <member refid="classNetworking_1_1ExecdArgumentList_1a663fb232b540be8fbc0c94fe8dbdcfe4" prot="public" virt="non-virtual"><scope>Networking::ExecdArgumentList</scope><name>ExecdArgumentList</name></member>
      <member refid="classNetworking_1_1ExecdArgumentList_1a0bccc97084d215db0bdee202560283a1" prot="public" virt="non-virtual"><scope>Networking::ExecdArgumentList</scope><name>focus_argument_list</name></member>
      <member refid="classNetworking_1_1ExecdArgumentList_1a30e4a20ce7b4bf5f9c0f7e7d7d04b56b" prot="private" virt="non-virtual"><scope>Networking::ExecdArgumentList</scope><name>focus_defaults</name></member>
      <member refid="classNetworking_1_1ExecdArgumentList_1a2a0b69678233e3ace95df86c21f9908e" prot="public" virt="non-virtual"><scope>Networking::ExecdArgumentList</scope><name>getFocusArguments</name></member>
      <member refid="classNetworking_1_1ExecdArgumentList_1a5737b4602a442dd36d3223a0877517e7" prot="public" virt="non-virtual"><scope>Networking::ExecdArgumentList</scope><name>getFormArguments</name></member>
      <member refid="classNetworking_1_1ExecdArgumentList_1a5f8fb9abf08bfca490746b2ea80c5c1c" prot="public" virt="non-virtual"><scope>Networking::ExecdArgumentList</scope><name>getReformArguments</name></member>
      <member refid="classNetworking_1_1ExecdArgumentList_1ae7a9fa5564f113b5fabb2f4ad9191b41" prot="public" virt="non-virtual"><scope>Networking::ExecdArgumentList</scope><name>reform_argument_list</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
