<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="new_2c__deserial_8py" kind="file" language="Python">
    <compoundname>c_deserial.py</compoundname>
    <innerclass refid="classc__deserial_1_1TupleReader" prot="public">c_deserial::TupleReader</innerclass>
    <innerclass refid="classc__deserial_1_1Deserial" prot="public">c_deserial::Deserial</innerclass>
    <innernamespace refid="namespacec__deserial">c_deserial</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>struct<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="4"><highlight class="normal">TYPES_DICT={</highlight><highlight class="stringliteral">&quot;uint64_t&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;Q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;uint32_t&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;uint16_t&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;H&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;uint8_t&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int64_t&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;int32_t&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;int16_t&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;h&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;int8_t&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;char&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;bool&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;double&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;long<sp/>long<sp/>int&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;unsigned<sp/>long<sp/>long<sp/>int&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;Q&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TupleReader():</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>data):</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.index<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.data<sp/>=<sp/>data</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">read(self,<sp/>length):</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(length<sp/>==<sp/>1):</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>self.data[self.index]</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>self.data[self.index:self.index+length]</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.index<sp/>+=<sp/>length</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Deserial():</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>c_struct,<sp/>alignment=&quot;=&quot;):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.alignment<sp/>=<sp/>alignment</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.varlist,<sp/>self.pack_format<sp/>=<sp/>self.structInfo(c_struct)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">structInfo(self,<sp/>cStruct):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TYPE_REGEX=re.compile(</highlight><highlight class="stringliteral">&quot;\\s*([a-zA-Z0-9_<sp/>]+)\\s+(\\w+)(?:\\[(\\d*)\\])?;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pack_format=self.alignment</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>varlist=[];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>cStruct.splitlines():</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vartype,<sp/>varname,<sp/>arrayLength=TYPE_REGEX.findall(line)[0]</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vartype=TYPES_DICT[vartype];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>arrayLength:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayLength=int(arrayLength);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayLength=1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pack_format+=vartype*arrayLength</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>varlist.append([varname,arrayLength])</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>IndexError:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>varlist,<sp/>pack_format</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="imagemetadata_8h_1aaba88b24a21a6c70c895c0d55f4a69a0" kindref="member">size</ref>(self):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>struct.calcsize(self.pack_format)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">serial(self,<sp/>fields):</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>struct.pack(self.pack_format,<sp/>*fields<sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">to_dict(self,<sp/>bindata):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pack_format<sp/>=<sp/>self.pack_format</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unpacked=struct.unpack(pack_format,<sp/>bindata<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader<sp/>=<sp/>TupleReader(unpacked)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name,<sp/>length<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.varlist:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[name]<sp/>=<sp/>reader.read(length)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>MY_STRUCT=</highlight><highlight class="stringliteral">&quot;&quot;&quot;typedef<sp/>struct<sp/>__attribute__<sp/>((__packed__)){</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>uint8_t<sp/>u8;</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>uint16_t<sp/>u16;</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>uint32_t<sp/>u32;</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>uint64_t<sp/>u64;</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>int8_t<sp/>i8;</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>int16_t<sp/>i16;</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>int32_t<sp/>i32;</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>int64_t<sp/>i64;</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>long<sp/>long<sp/>int<sp/>lli;</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>float<sp/>flt;</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>double<sp/>dbl;</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>char<sp/>string[12];</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>uint64_t<sp/>array[5];</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral">}<sp/>debugInfo;&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>PACKED_STRUCT=b&apos;\x01\x00\x01\x00\x00\x01\x00\x00\x00\x00\x00\x01\x00\x00\x00\xff\x00\xff\x00\x00\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff*\x00\x00\x00\x00\x00\x00\x00ff\x06@\x14\xaeG\xe1z\x14\x08@testString\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>Deserial(MY_STRUCT)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>print(d.to_dict(PACKED_STRUCT)<sp/>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/python/strip/new/c_deserial.py"/>
  </compounddef>
</doxygen>
