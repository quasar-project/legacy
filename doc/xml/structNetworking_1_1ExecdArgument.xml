<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structNetworking_1_1ExecdArgument" kind="struct" language="C++" prot="public">
    <compoundname>Networking::ExecdArgument</compoundname>
    <includes refid="execdargumentlist_8h" local="no">execdargumentlist.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="structNetworking_1_1ExecdArgument_1a42601f1ee2f083ed342f8d5875ef7ff1" prot="public" static="no" strong="no">
        <type></type>
        <name>ArgumentType</name>
        <qualifiedname>Networking::ExecdArgument::ArgumentType</qualifiedname>
        <enumvalue id="structNetworking_1_1ExecdArgument_1a42601f1ee2f083ed342f8d5875ef7ff1a89e408f521f3ecccc43a11ffd3e3ac61" prot="public">
          <name>Float</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structNetworking_1_1ExecdArgument_1a42601f1ee2f083ed342f8d5875ef7ff1a7d7c2741d850294f62305f1f213f1322" prot="public">
          <name>Integer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structNetworking_1_1ExecdArgument_1a42601f1ee2f083ed342f8d5875ef7ff1af92e2a6b15264b89110ef60a9e460f75" prot="public">
          <name>String</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="12" column="9" bodyfile="src/c++/network/execd/execdargumentlist.h" bodystart="13" bodyend="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structNetworking_1_1ExecdArgument_1ac0c62772a4f03feaff47441928e05c27" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const int</type>
        <definition>constexpr const int Networking::ExecdArgument::FLOATING_POINT_PRECISION</definition>
        <argsstring></argsstring>
        <name>FLOATING_POINT_PRECISION</name>
        <qualifiedname>Networking::ExecdArgument::FLOATING_POINT_PRECISION</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="10" column="36" bodyfile="src/c++/network/execd/execdargumentlist.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structNetworking_1_1ExecdArgument_1a1b41693d7ce920ce5c945d0496c2db2c" prot="public" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Networking::ExecdArgument::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>Networking::ExecdArgument::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="26" column="17" bodyfile="src/c++/network/execd/execdargumentlist.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetworking_1_1ExecdArgument_1aec55b97fe398e3bb5e8ac0b50077feea" prot="public" static="no" mutable="no">
        <type><ref refid="structNetworking_1_1ExecdArgument_1a42601f1ee2f083ed342f8d5875ef7ff1" kindref="member">ArgumentType</ref></type>
        <definition>ArgumentType Networking::ExecdArgument::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>Networking::ExecdArgument::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="27" column="22" bodyfile="src/c++/network/execd/execdargumentlist.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structNetworking_1_1ExecdArgument_1a0107cd071c2204343e46ab2b741986d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Networking::ExecdArgument::ExecdArgument</definition>
        <argsstring>()</argsstring>
        <name>ExecdArgument</name>
        <qualifiedname>Networking::ExecdArgument::ExecdArgument</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="19" column="9" bodyfile="src/c++/network/execd/execdargumentlist.c++" bodystart="7" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="structNetworking_1_1ExecdArgument_1ac350a6ab91409f0b6f5601fb578adf77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Networking::ExecdArgument::ExecdArgument</definition>
        <argsstring>(int)</argsstring>
        <name>ExecdArgument</name>
        <qualifiedname>Networking::ExecdArgument::ExecdArgument</qualifiedname>
        <param>
          <type>int</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="20" column="9" bodyfile="src/c++/network/execd/execdargumentlist.c++" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="structNetworking_1_1ExecdArgument_1aabaddd54737aef4da24016cf3ece4dc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Networking::ExecdArgument::ExecdArgument</definition>
        <argsstring>(float)</argsstring>
        <name>ExecdArgument</name>
        <qualifiedname>Networking::ExecdArgument::ExecdArgument</qualifiedname>
        <param>
          <type>float</type>
          <defname>f</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="21" column="9" bodyfile="src/c++/network/execd/execdargumentlist.c++" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="structNetworking_1_1ExecdArgument_1a63f112b8c917f9c8c1b96532f08abeec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Networking::ExecdArgument::ExecdArgument</definition>
        <argsstring>(QString)</argsstring>
        <name>ExecdArgument</name>
        <qualifiedname>Networking::ExecdArgument::ExecdArgument</qualifiedname>
        <param>
          <type>QString</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="22" column="9" bodyfile="src/c++/network/execd/execdargumentlist.c++" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="structNetworking_1_1ExecdArgument_1ac44a7b700cfeb2ab69526f6409fc25a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Networking::ExecdArgument::set</definition>
        <argsstring>(const QVariant &amp;v)</argsstring>
        <name>set</name>
        <qualifiedname>Networking::ExecdArgument::set</qualifiedname>
        <param>
          <type>const QVariant &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdargumentlist.h" line="24" column="14" bodyfile="src/c++/network/execd/execdargumentlist.c++" bodystart="27" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/c++/network/execd/execdargumentlist.h" line="8" column="5" bodyfile="src/c++/network/execd/execdargumentlist.h" bodystart="9" bodyend="28"/>
    <listofallmembers>
      <member refid="structNetworking_1_1ExecdArgument_1a42601f1ee2f083ed342f8d5875ef7ff1" prot="public" virt="non-virtual"><scope>Networking::ExecdArgument</scope><name>ArgumentType</name></member>
      <member refid="structNetworking_1_1ExecdArgument_1a0107cd071c2204343e46ab2b741986d9" prot="public" virt="non-virtual"><scope>Networking::ExecdArgument</scope><name>ExecdArgument</name></member>
      <member refid="structNetworking_1_1ExecdArgument_1ac350a6ab91409f0b6f5601fb578adf77" prot="public" virt="non-virtual"><scope>Networking::ExecdArgument</scope><name>ExecdArgument</name></member>
      <member refid="structNetworking_1_1ExecdArgument_1aabaddd54737aef4da24016cf3ece4dc5" prot="public" virt="non-virtual"><scope>Networking::ExecdArgument</scope><name>ExecdArgument</name></member>
      <member refid="structNetworking_1_1ExecdArgument_1a63f112b8c917f9c8c1b96532f08abeec" prot="public" virt="non-virtual"><scope>Networking::ExecdArgument</scope><name>ExecdArgument</name></member>
      <member refid="structNetworking_1_1ExecdArgument_1a42601f1ee2f083ed342f8d5875ef7ff1a89e408f521f3ecccc43a11ffd3e3ac61" prot="public" virt="non-virtual"><scope>Networking::ExecdArgument</scope><name>Float</name></member>
      <member refid="structNetworking_1_1ExecdArgument_1ac0c62772a4f03feaff47441928e05c27" prot="public" virt="non-virtual"><scope>Networking::ExecdArgument</scope><name>FLOATING_POINT_PRECISION</name></member>
      <member refid="structNetworking_1_1ExecdArgument_1a42601f1ee2f083ed342f8d5875ef7ff1a7d7c2741d850294f62305f1f213f1322" prot="public" virt="non-virtual"><scope>Networking::ExecdArgument</scope><name>Integer</name></member>
      <member refid="structNetworking_1_1ExecdArgument_1ac44a7b700cfeb2ab69526f6409fc25a7" prot="public" virt="non-virtual"><scope>Networking::ExecdArgument</scope><name>set</name></member>
      <member refid="structNetworking_1_1ExecdArgument_1a42601f1ee2f083ed342f8d5875ef7ff1af92e2a6b15264b89110ef60a9e460f75" prot="public" virt="non-virtual"><scope>Networking::ExecdArgument</scope><name>String</name></member>
      <member refid="structNetworking_1_1ExecdArgument_1aec55b97fe398e3bb5e8ac0b50077feea" prot="public" virt="non-virtual"><scope>Networking::ExecdArgument</scope><name>type</name></member>
      <member refid="structNetworking_1_1ExecdArgument_1a1b41693d7ce920ce5c945d0496c2db2c" prot="public" virt="non-virtual"><scope>Networking::ExecdArgument</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
