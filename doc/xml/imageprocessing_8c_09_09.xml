<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="imageprocessing_8c_09_09" kind="file" language="C++">
    <compoundname>imageprocessing.c++</compoundname>
    <includes refid="imageprocessing_8h" local="yes">imageprocessing.h</includes>
    <includes refid="imagemodel_8h" local="yes">map/imagemodel.h</includes>
    <includes refid="stripimage_8h" local="yes">map/entities/stripimage.h</includes>
    <includes refid="paths_8h" local="yes">config/paths.h</includes>
    <includes refid="config_8h" local="yes">config/config.h</includes>
    <includes local="no">QtCore/QDebug</includes>
    <includes local="no">QtCore/QFile</includes>
    <includes local="no">QtCore/QtEndian</includes>
    <includes local="no">QtCore/QMetaType</includes>
    <includes local="no">QtCore/QDataStream</includes>
    <includes local="no">QtGui/QImage</includes>
    <includes local="no">QtGui/QPainter</includes>
    <includes local="no">QtGui/QPainterPath</includes>
    <includes local="no">QtConcurrent/QtConcurrent</includes>
    <includes local="no">cmath</includes>
    <includes local="no">LPVL/Math</includes>
    <includes local="no">LPVL/Crypto</includes>
    <includes local="no">CCL/Geomath</includes>
    <incdepgraph>
      <node id="18">
        <label>config/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>config/paths.h</label>
        <link refid="paths_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>entities/image.h</label>
        <link refid="image_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>imagemetadata.h</label>
        <link refid="imagemetadata_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>map/entities/stripimage.h</label>
        <link refid="stripimage_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>map/imagemodel.h</label>
        <link refid="imagemodel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/c++/processing/imageprocessing.c++</label>
        <link refid="imageprocessing_8c_09_09"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>imageprocessing.h</label>
        <link refid="imageprocessing_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>CCL/Geomath</label>
      </node>
      <node id="32">
        <label>LPVL/Crypto</label>
      </node>
      <node id="5">
        <label>LPVL/Global</label>
      </node>
      <node id="31">
        <label>LPVL/Math</label>
      </node>
      <node id="14">
        <label>QPair</label>
      </node>
      <node id="29">
        <label>QtConcurrent/QtConcurrent</label>
      </node>
      <node id="7">
        <label>QtCore/QAbstractListModel</label>
      </node>
      <node id="25">
        <label>QtCore/QDataStream</label>
      </node>
      <node id="21">
        <label>QtCore/QDebug</label>
      </node>
      <node id="22">
        <label>QtCore/QFile</label>
      </node>
      <node id="19">
        <label>QtCore/QMap</label>
      </node>
      <node id="24">
        <label>QtCore/QMetaType</label>
      </node>
      <node id="3">
        <label>QtCore/QObject</label>
      </node>
      <node id="16">
        <label>QtCore/QPair</label>
      </node>
      <node id="13">
        <label>QtCore/QString</label>
      </node>
      <node id="20">
        <label>QtCore/QVariant</label>
      </node>
      <node id="8">
        <label>QtCore/QVector</label>
      </node>
      <node id="23">
        <label>QtCore/QtEndian</label>
      </node>
      <node id="26">
        <label>QtGui/QImage</label>
      </node>
      <node id="27">
        <label>QtGui/QPainter</label>
      </node>
      <node id="28">
        <label>QtGui/QPainterPath</label>
      </node>
      <node id="9">
        <label>QtPositioning/QGeoCoordinate</label>
      </node>
      <node id="30">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imageprocessing_8h" kindref="compound">imageprocessing.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imagemodel_8h" kindref="compound">map/imagemodel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stripimage_8h" kindref="compound">map/entities/stripimage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="paths_8h" kindref="compound">config/paths.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config/config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QDebug&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QFile&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QtEndian&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QMetaType&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QDataStream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtGui/QImage&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtGui/QPainter&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtGui/QPainterPath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtConcurrent/QtConcurrent&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;LPVL/Math&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;LPVL/Crypto&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CCL/Geomath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceProcessing" kindref="compound">Processing</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">ImageProcessing::ImageProcessing(QObject*<sp/>parent)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject{parent}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_model(new<sp/><ref refid="namespaceMap" kindref="compound">Map</ref>::ImageModel(this))</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;Map::Image&gt;(</highlight><highlight class="stringliteral">&quot;Map::Image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;Map::StripImage&gt;(</highlight><highlight class="stringliteral">&quot;Map::StripImage&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;vector&lt;uint8_t&gt;&gt;(</highlight><highlight class="stringliteral">&quot;vector&lt;uint8_t&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classProcessing_1_1ImageProcessing_1ad6ea30b5bc3a8edfb86a8c0b79b983fa" kindref="member">ImageProcessing::processImageFinished</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classProcessing_1_1ImageProcessing_1a9502e60c340934b13e8c418bff7e96ed" kindref="member">ImageProcessing::passImage</ref>,<sp/>Qt::QueuedConnection);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classProcessing_1_1ImageProcessing_1a24d48c69a72ada4ee3e25988a5ed0862" kindref="member">ImageProcessing::processList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QString&gt;&amp;<sp/>list)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PROCESSING]<sp/>Received<sp/>list<sp/>of&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>list.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;images<sp/>and<sp/>binaries&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>QThreadPool<sp/>pool1;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>pool1.setMaxThreadCount(2);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>QThreadPool<sp/>pool2;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>pool2.setMaxThreadCount(4);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>filename<sp/>:<sp/>list)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classProcessing_1_1ImageProcessing_1a32f03f5c4203f5fc9d22b723c358a5e9" kindref="member">ImageType</ref><sp/>T<sp/>=<sp/>filename.endsWith(</highlight><highlight class="stringliteral">&quot;.bin&quot;</highlight><highlight class="normal">)<sp/>?<sp/><ref refid="classProcessing_1_1ImageProcessing_1a32f03f5c4203f5fc9d22b723c358a5e9a1f3a126ef435362ff65c9ba28e861cf2" kindref="member">Strip</ref><sp/>:<sp/><ref refid="classProcessing_1_1ImageProcessing_1a32f03f5c4203f5fc9d22b723c358a5e9ad0ee4e87867adf446292923db04237f6" kindref="member">Telescopic</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(T)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classProcessing_1_1ImageProcessing_1a32f03f5c4203f5fc9d22b723c358a5e9ad0ee4e87867adf446292923db04237f6" kindref="member">Telescopic</ref>:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFuture&lt;void&gt;<sp/>future<sp/>=<sp/>QtConcurrent::run(&amp;pool1,<sp/>[=](){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;asyncProcess(filename);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classProcessing_1_1ImageProcessing_1a32f03f5c4203f5fc9d22b723c358a5e9a1f3a126ef435362ff65c9ba28e861cf2" kindref="member">Strip</ref>:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFuture&lt;void&gt;<sp/>future<sp/>=<sp/>QtConcurrent::run(&amp;pool2,<sp/>[=](){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;asyncStripProcess(filename);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCritical()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classProcessing_1_1ImageProcessing_1a4bb6326cb3b6fab5124daed04cd7e383" kindref="member">setProcessingImage</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImageProcessing::asyncProcess(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structMap_1_1Image" kindref="compound">Map::Image</ref><sp/>image;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1Image_1a29bcbfe80a9d0760fb4f097450a9c9cc" kindref="member">filename</ref><sp/>=<sp/>filename;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1Image_1a0bd79077acd4a397056ddd7804cc72a7" kindref="member">path</ref>.first<sp/>=<sp/><ref refid="classConfig_1_1Paths_1a812a16f7eef2d26857f3ecf0fca2eb74" kindref="member">Config::Paths::lod</ref>(0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>data<sp/>=<sp/>fileToByteArray(image.<ref refid="structMap_1_1Image_1a0bd79077acd4a397056ddd7804cc72a7" kindref="member">path</ref>.first);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data_ptr<sp/>=<sp/>data.data();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t*<sp/><ref refid="imagemetadata_8h_1a51bdee9eea878b90b917afc0f8c99435" kindref="member">marker</ref><sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint16_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_ptr<sp/>+<sp/>image.<ref refid="structMap_1_1Image_1a87917fc17dfdaab7e0c2872441a080e8" kindref="member">header</ref>.<ref refid="structMap_1_1ImageMetaHeader_1adee66ef2cc3e46ff641b96306f622078" kindref="member">JPEG_HEADER_SIZE</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*<ref refid="imagemetadata_8h_1a51bdee9eea878b90b917afc0f8c99435" kindref="member">marker</ref><sp/>!=<sp/>image.<ref refid="structMap_1_1Image_1a87917fc17dfdaab7e0c2872441a080e8" kindref="member">header</ref>.<ref refid="structMap_1_1ImageMetaHeader_1a853a17ea7383281fb2f1707450c05544" kindref="member">meta_marker</ref><sp/>and<sp/>*<ref refid="imagemetadata_8h_1a51bdee9eea878b90b917afc0f8c99435" kindref="member">marker</ref><sp/>!=<sp/>qFromBigEndian&lt;uint16_t&gt;(image.<ref refid="structMap_1_1Image_1a87917fc17dfdaab7e0c2872441a080e8" kindref="member">header</ref>.<ref refid="structMap_1_1ImageMetaHeader_1a853a17ea7383281fb2f1707450c05544" kindref="member">meta_marker</ref>))</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCritical().noquote().nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PROCESSING]<sp/>Marker<sp/>mismatch:<sp/>expected<sp/>0x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>Qt::hex<sp/>&lt;&lt;<sp/>image.<ref refid="structMap_1_1Image_1a87917fc17dfdaab7e0c2872441a080e8" kindref="member">header</ref>.<ref refid="structMap_1_1ImageMetaHeader_1a853a17ea7383281fb2f1707450c05544" kindref="member">meta_marker</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>or<sp/>0x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>qFromBigEndian&lt;uint16_t&gt;(image.<ref refid="structMap_1_1Image_1a87917fc17dfdaab7e0c2872441a080e8" kindref="member">header</ref>.<ref refid="structMap_1_1ImageMetaHeader_1a853a17ea7383281fb2f1707450c05544" kindref="member">meta_marker</ref>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>received<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*<ref refid="imagemetadata_8h_1a51bdee9eea878b90b917afc0f8c99435" kindref="member">marker</ref><sp/>&lt;&lt;<sp/>Qt::dec;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>заполнение<sp/>структуры<sp/>метаданными</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t*<sp/>meta_size<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint16_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_ptr<sp/>+<sp/>image.<ref refid="structMap_1_1Image_1a87917fc17dfdaab7e0c2872441a080e8" kindref="member">header</ref>.<ref refid="structMap_1_1ImageMetaHeader_1adee66ef2cc3e46ff641b96306f622078" kindref="member">JPEG_HEADER_SIZE</ref></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>*meta_size<sp/>=<sp/>qToBigEndian(*meta_size)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>,<sp/>(data_ptr<sp/>+<sp/>image.<ref refid="structMap_1_1Image_1a87917fc17dfdaab7e0c2872441a080e8" kindref="member">header</ref>.<ref refid="structMap_1_1ImageMetaHeader_1adee66ef2cc3e46ff641b96306f622078" kindref="member">JPEG_HEADER_SIZE</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)),<sp/>*meta_size);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>проверка<sp/>контрольной<sp/>суммы</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>crc_data<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>crc16<sp/>=<sp/>LPVL::crc16(crc_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structMap_1_1ImageMetadata" kindref="compound">Map::ImageMetadata</ref>)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1Image_1accfc943b034bc01a9a0fda92c104d229" kindref="member">valid</ref><sp/>=<sp/>crc16<sp/>==<sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1af0308f9a20c019c7193a32c297979ffe" kindref="member">crc16</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>image.<ref refid="structMap_1_1Image_1accfc943b034bc01a9a0fda92c104d229" kindref="member">valid</ref>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning().noquote().nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PROCESSING]<sp/>Image<sp/>CRC16<sp/>seems<sp/>to<sp/>be<sp/>incorrect:<sp/>expected<sp/>0x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>Qt::hex<sp/>&lt;&lt;<sp/>crc16<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>received<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1af0308f9a20c019c7193a32c297979ffe" kindref="member">crc16</ref><sp/>&lt;&lt;<sp/>Qt::dec;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>геометрические<sp/>преобразования</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="config_8h_1a57ac94d78fd654075be8b8c9edc5781b" kindref="member">CONFIG</ref>(useRadians))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a2652674294dda62ddd7712855aacfd5b" kindref="member">angle</ref><sp/>=<sp/>LPVL::rad2deg(image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a2652674294dda62ddd7712855aacfd5b" kindref="member">angle</ref>)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="config_8h_1a57ac94d78fd654075be8b8c9edc5781b" kindref="member">CONFIG</ref>(angleCorrection);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a10b3d39359121dedc879283b905f1c61" kindref="member">drift_angle</ref><sp/>=<sp/><ref refid="config_8h_1a57ac94d78fd654075be8b8c9edc5781b" kindref="member">CONFIG</ref>(useDriftAngle)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>LPVL::rad2deg(image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a10b3d39359121dedc879283b905f1c61" kindref="member">drift_angle</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a899295d6f391efbb11345041c44573c9" kindref="member">div</ref><sp/>=<sp/>LPVL::rad2deg(image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a899295d6f391efbb11345041c44573c9" kindref="member">div</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a2652674294dda62ddd7712855aacfd5b" kindref="member">angle</ref><sp/>+=<sp/><ref refid="config_8h_1a57ac94d78fd654075be8b8c9edc5781b" kindref="member">CONFIG</ref>(angleCorrection);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>QImage<sp/>image_data(image.<ref refid="structMap_1_1Image_1a0bd79077acd4a397056ddd7804cc72a7" kindref="member">path</ref>.first);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="config_8h_1a57ac94d78fd654075be8b8c9edc5781b" kindref="member">CONFIG</ref>(overrideImageHeight))</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a6ae55377f443842b0549fc4b840803cf" kindref="member">ly</ref><sp/>=<sp/>image_data.height();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>target_filename<sp/>=<sp/>filename;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>target_filename.chop(3);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>target_filename<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;png&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="config_8h_1a57ac94d78fd654075be8b8c9edc5781b" kindref="member">CONFIG</ref>(cutImage))</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>image_data.save(<ref refid="classConfig_1_1Paths_1a812a16f7eef2d26857f3ecf0fca2eb74" kindref="member">Config::Paths::lod</ref>(0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>target_filename);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qInfo()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PROCESSING]<sp/>Image<sp/>saved<sp/>successfully<sp/>without<sp/>correction&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCritical()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PROCESSING]<sp/>Failed<sp/>to<sp/>save<sp/>image&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QImage<sp/>sample(image_data.width(),<sp/>image_data.height(),<sp/>QImage::Format_ARGB32_Premultiplied);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample.fill(QColor(254,<sp/>254,<sp/>254));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_data.setAlphaChannel(sample);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPainter<sp/>painter;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPainterPath<sp/>path;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QBrush<sp/>brush(Qt::transparent,<sp/>Qt::SolidPattern);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPolygon<sp/>p1,<sp/>p2;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>brush.setStyle(Qt::SolidPattern);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>brush.setColor(Qt::transparent);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.begin(&amp;image_data);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.setCompositionMode(QPainter::CompositionMode_Source);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.setPen(QPen(Qt::transparent,<sp/>10));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.setRenderHint(QPainter::Antialiasing);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top[8]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>(int)((image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a6ae55377f443842b0549fc4b840803cf" kindref="member">ly</ref><sp/>/<sp/>2)<sp/>-<sp/>2</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1ac8b4b1196c13f50ba2a8679a2477bfaa" kindref="member">x0</ref></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>tan(LPVL::deg2rad((image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a899295d6f391efbb11345041c44573c9" kindref="member">div</ref><sp/>-<sp/><ref refid="config_8h_1a57ac94d78fd654075be8b8c9edc5781b" kindref="member">CONFIG</ref>(thetaAzimuthCorrection))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>2))),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1ab970bbc38a77ce14a7110a0c792d614d" kindref="member">lx</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1ab970bbc38a77ce14a7110a0c792d614d" kindref="member">lx</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a6ae55377f443842b0549fc4b840803cf" kindref="member">ly</ref><sp/>/<sp/>2)<sp/>-</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2<sp/>*<sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1ac8b4b1196c13f50ba2a8679a2477bfaa" kindref="member">x0</ref><sp/>+<sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1ab970bbc38a77ce14a7110a0c792d614d" kindref="member">lx</ref>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>tan(LPVL::deg2rad((image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a899295d6f391efbb11345041c44573c9" kindref="member">div</ref><sp/>-<sp/><ref refid="config_8h_1a57ac94d78fd654075be8b8c9edc5781b" kindref="member">CONFIG</ref>(thetaAzimuthCorrection))</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>2)))</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom[8]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>(int)((image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a6ae55377f443842b0549fc4b840803cf" kindref="member">ly</ref><sp/>/<sp/>2)<sp/>+<sp/>2</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1ac8b4b1196c13f50ba2a8679a2477bfaa" kindref="member">x0</ref></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>tan(LPVL::deg2rad((image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a899295d6f391efbb11345041c44573c9" kindref="member">div</ref><sp/>-<sp/><ref refid="config_8h_1a57ac94d78fd654075be8b8c9edc5781b" kindref="member">CONFIG</ref>(thetaAzimuthCorrection))</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>2))),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a6ae55377f443842b0549fc4b840803cf" kindref="member">ly</ref>,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1ab970bbc38a77ce14a7110a0c792d614d" kindref="member">lx</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a6ae55377f443842b0549fc4b840803cf" kindref="member">ly</ref>,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1ab970bbc38a77ce14a7110a0c792d614d" kindref="member">lx</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a6ae55377f443842b0549fc4b840803cf" kindref="member">ly</ref><sp/>/<sp/>2)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(2<sp/>*<sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1ac8b4b1196c13f50ba2a8679a2477bfaa" kindref="member">x0</ref><sp/>+<sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1ab970bbc38a77ce14a7110a0c792d614d" kindref="member">lx</ref>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>tan(LPVL::deg2rad((image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a899295d6f391efbb11345041c44573c9" kindref="member">div</ref><sp/>-<sp/><ref refid="config_8h_1a57ac94d78fd654075be8b8c9edc5781b" kindref="member">CONFIG</ref>(thetaAzimuthCorrection))</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>2)))</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1.setPoints(4,<sp/>top);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2.setPoints(4,<sp/>bottom);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPolygon(p1);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPolygon(p2);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.addPolygon(p1);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.addPolygon(p2);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.fillPath(path,<sp/>brush);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.end();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>image_data.save(<ref refid="classConfig_1_1Paths_1a812a16f7eef2d26857f3ecf0fca2eb74" kindref="member">Config::Paths::lod</ref>(0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>target_filename);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qInfo()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PROCESSING]<sp/>Image<sp/>saved<sp/>successfully<sp/>with<sp/>correction&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCritical()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PROCESSING]<sp/>Failed<sp/>to<sp/>save<sp/>image&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1Image_1a0bd79077acd4a397056ddd7804cc72a7" kindref="member">path</ref>.first<sp/>=<sp/><ref refid="classConfig_1_1Paths_1a812a16f7eef2d26857f3ecf0fca2eb74" kindref="member">Config::Paths::lod</ref>(0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>target_filename;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile::remove(<ref refid="classConfig_1_1Paths_1a812a16f7eef2d26857f3ecf0fca2eb74" kindref="member">Config::Paths::lod</ref>(0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1Image_1a4c47a43cbebd8b691b3f581199910929" kindref="member">opacity</ref><sp/>=<sp/>INITIAL_OPACITY;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1Image_1a60cb3810660792e26a34afbe8b4a5b4c" kindref="member">shown</ref><sp/>=<sp/>INITIAL_VISIBILITY;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1Image_1a5453329e1ea3257d8d43b2d34d5e0440" kindref="member">mercator_zoom_level</ref><sp/>=<sp/>CCL::mqiZoomLevel(image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a516bbde1926bd5028f4320598c4c1813" kindref="member">latitude</ref>,<sp/>image.<ref refid="structMap_1_1Image_1a77e451c0faa131e4780936c1cf686d2a" kindref="member">meta</ref>.<ref refid="structMap_1_1ImageMetadata_1a331bf0fca7f4cc855d6bc02b12d8194a" kindref="member">dx</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classProcessing_1_1ImageProcessing_1a4bb6326cb3b6fab5124daed04cd7e383" kindref="member">setProcessingImage</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classProcessing_1_1ImageProcessing_1ad6ea30b5bc3a8edfb86a8c0b79b983fa" kindref="member">processImageFinished</ref>(image);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImageProcessing::asyncStripProcess(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structMap_1_1StripImage" kindref="compound">Map::StripImage</ref><sp/>image;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_compressed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1StripImage_1abc5a051af671f5708491a4583b06a358" kindref="member">filename</ref><sp/>=<sp/>filename;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>image.<ref refid="structMap_1_1StripImage_1a0e51a07dd5c93876290610b1b1242838" kindref="member">path</ref>.first<sp/>=<sp/><ref refid="classConfig_1_1Paths_1a812a16f7eef2d26857f3ecf0fca2eb74" kindref="member">Config::Paths::lod</ref>(0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>chunks_unknown_ws;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>data<sp/>=<sp/>fileToByteArray(image.<ref refid="structMap_1_1StripImage_1a0e51a07dd5c93876290610b1b1242838" kindref="member">path</ref>.first);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data_ptr<sp/>=<sp/>data.data();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,<sp/>columns;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>qInfo()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;$<sp/>&lt;i&gt;Entered<sp/>cycle&lt;/i&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>forever</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(offset<sp/>&gt;=<sp/>data.size())</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structMap_1_1StripImageDatagram" kindref="compound">Map::StripImageDatagram</ref><sp/>datagram;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;datagram.<ref refid="structMap_1_1StripImageDatagram_1a6768df34549cd809f14fd43833cf28f9" kindref="member">header</ref>,<sp/>data_ptr<sp/>+<sp/>offset,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a6768df34549cd809f14fd43833cf28f9" kindref="member">header</ref>));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;datagram.<ref refid="structMap_1_1StripImageDatagram_1a1a85adad2edc7897889733f32d8c7fb1" kindref="member">nav</ref>,<sp/>data_ptr<sp/>+<sp/>offset<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a6768df34549cd809f14fd43833cf28f9" kindref="member">header</ref>),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a1a85adad2edc7897889733f32d8c7fb1" kindref="member">nav</ref>));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;datagram.<ref refid="structMap_1_1StripImageDatagram_1a9ff7345a7488d0c8ee2889ddcb03315b" kindref="member">format</ref>,<sp/>data_ptr<sp/>+<sp/>offset<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a6768df34549cd809f14fd43833cf28f9" kindref="member">header</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a1a85adad2edc7897889733f32d8c7fb1" kindref="member">nav</ref>),</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a9ff7345a7488d0c8ee2889ddcb03315b" kindref="member">format</ref>));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a9ff7345a7488d0c8ee2889ddcb03315b" kindref="member">format</ref>.<ref refid="structMap_1_1StripFormatMetadata_1a99947d2a922494271b85d28d678c1257" kindref="member">word_size</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_compressed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>now<sp/>I<sp/>will<sp/>just<sp/>hardcode<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datagram.<ref refid="structMap_1_1StripImageDatagram_1a9ff7345a7488d0c8ee2889ddcb03315b" kindref="member">format</ref>.<ref refid="structMap_1_1StripFormatMetadata_1a99947d2a922494271b85d28d678c1257" kindref="member">word_size</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_size<sp/>=<sp/>datagram.<ref refid="structMap_1_1StripImageDatagram_1a6768df34549cd809f14fd43833cf28f9" kindref="member">header</ref>.<ref refid="structMap_1_1StripHeaderMetadata_1a7eeaa4f4d37b8551c24248d3d07f8b7b" kindref="member">size</ref><sp/>*<sp/>datagram.<ref refid="structMap_1_1StripImageDatagram_1a9ff7345a7488d0c8ee2889ddcb03315b" kindref="member">format</ref>.<ref refid="structMap_1_1StripFormatMetadata_1a99947d2a922494271b85d28d678c1257" kindref="member">word_size</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>ws)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws<sp/>=<sp/>datagram.<ref refid="structMap_1_1StripImageDatagram_1a9ff7345a7488d0c8ee2889ddcb03315b" kindref="member">format</ref>.<ref refid="structMap_1_1StripFormatMetadata_1a99947d2a922494271b85d28d678c1257" kindref="member">word_size</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>(int)(datagram.<ref refid="structMap_1_1StripImageDatagram_1a9ff7345a7488d0c8ee2889ddcb03315b" kindref="member">format</ref>.<ref refid="structMap_1_1StripFormatMetadata_1a7d583842c4046f20df88082771d988b6" kindref="member">dx</ref><sp/>*<sp/>datagram.<ref refid="structMap_1_1StripImageDatagram_1a9ff7345a7488d0c8ee2889ddcb03315b" kindref="member">format</ref>.<ref refid="structMap_1_1StripFormatMetadata_1a5145780f1e8a120c8fc4171638757ebc" kindref="member">nx</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chunk[chunk_size];</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fchunk[chunk_size];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_compressed)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QByteArray<sp/>chunk_compressed;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_compressed.resize(datagram.<ref refid="structMap_1_1StripImageDatagram_1a6768df34549cd809f14fd43833cf28f9" kindref="member">header</ref>.<ref refid="structMap_1_1StripHeaderMetadata_1a7eeaa4f4d37b8551c24248d3d07f8b7b" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_compressed.replace(0,<sp/>datagram.<ref refid="structMap_1_1StripImageDatagram_1a6768df34549cd809f14fd43833cf28f9" kindref="member">header</ref>.<ref refid="structMap_1_1StripHeaderMetadata_1a7eeaa4f4d37b8551c24248d3d07f8b7b" kindref="member">size</ref>,<sp/>data_ptr<sp/>+<sp/>offset<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a6768df34549cd809f14fd43833cf28f9" kindref="member">header</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a1a85adad2edc7897889733f32d8c7fb1" kindref="member">nav</ref>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a9ff7345a7488d0c8ee2889ddcb03315b" kindref="member">format</ref>));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(chunk,<sp/>chunk_compressed.constData(),<sp/>chunk_size);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(chunk,<sp/>data_ptr<sp/>+<sp/>offset<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a6768df34549cd809f14fd43833cf28f9" kindref="member">header</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a1a85adad2edc7897889733f32d8c7fb1" kindref="member">nav</ref>)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a9ff7345a7488d0c8ee2889ddcb03315b" kindref="member">format</ref>),<sp/>chunk_size);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>chunk_size;<sp/>++i)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fchunk[i]<sp/>=<sp/>chunk[i];</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_unknown_ws.push_back(fchunk[i]);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a6768df34549cd809f14fd43833cf28f9" kindref="member">header</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a1a85adad2edc7897889733f32d8c7fb1" kindref="member">nav</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(datagram.<ref refid="structMap_1_1StripImageDatagram_1a9ff7345a7488d0c8ee2889ddcb03315b" kindref="member">format</ref>)<sp/>+<sp/>chunk_size);<sp/></highlight><highlight class="comment">//84<sp/>+<sp/>chunk_size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>qInfo()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;$<sp/>&lt;i&gt;Cycle<sp/>finished&lt;/i&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ws<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCritical()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PROCESSING]<sp/>Failed<sp/>to<sp/>decode<sp/>word<sp/>size&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>QDataStream<sp/>out(chunks_unknown_ws);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>QVector&lt;uint8_t&gt;<sp/>chunks8_t;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vl<sp/>=<sp/>chunks_unknown_ws.length()<sp/>/<sp/>ws;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixel_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ws<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks8_t.resize(vl);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vl;<sp/>i++)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&gt;&gt;<sp/>chunks8_t[i];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows<sp/>=<sp/>(int)(chunks8_t.size()<sp/>/<sp/>columns);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixel_count<sp/>=<sp/>chunks8_t.size();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;uint8_t&gt;<sp/>out<sp/>=<sp/>vector&lt;uint8_t&gt;(chunks8_t.begin(),<sp/>chunks8_t.end());</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DEBUG_SAVE_STRIP_DATA_DESERIALIZED)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFile<sp/>file(<ref refid="classConfig_1_1Paths_1a812a16f7eef2d26857f3ecf0fca2eb74" kindref="member">Config::Paths::lod</ref>(0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/debug_strip_data.bin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file.open(QIODevice::WriteOnly))</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.write(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(out.data()),<sp/>out.size());</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PROCESSING]<sp/>Failed<sp/>to<sp/>save<sp/>debug<sp/>strip<sp/>data<sp/>to<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QImage<sp/>strip_result(columns,<sp/>rows,<sp/>QImage::Format_Grayscale16);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;vector&lt;float&gt;&gt;<sp/>data;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.resize(rows);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rows;<sp/>++i)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i].resize(columns);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>columns;<sp/>++j)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][j]<sp/>=<sp/>out[j<sp/>+<sp/>columns<sp/>*<sp/>i];</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>*std::max_element(out.begin(),<sp/>out.end());</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>data.size();<sp/>++row)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column<sp/>=<sp/>0;<sp/>column<sp/>&lt;<sp/>data[row].size();<sp/>++column)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(data[row][column]<sp/>*<sp/>255)<sp/>/<sp/>max;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>d[4]<sp/>=<sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(t),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(t),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(t),<sp/>255};</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t*<sp/>rs<sp/>=<sp/>(uint32_t*)d;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strip_result.setPixel(column,<sp/>row,<sp/>*rs);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>result_name<sp/>=<sp/>filename.chopped(3)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;png&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strip_result.save(<ref refid="classConfig_1_1Paths_1a812a16f7eef2d26857f3ecf0fca2eb74" kindref="member">Config::Paths::lod</ref>(0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>result_name,<sp/></highlight><highlight class="stringliteral">&quot;PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qInfo()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;$<sp/>[PROCESSING]<sp/>Saved<sp/>strip<sp/>image&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="classConfig_1_1Paths_1a812a16f7eef2d26857f3ecf0fca2eb74" kindref="member">Config::Paths::lod</ref>(0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>result_name);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DEBUG_SHOW_STRIP_DATA_MATRIX)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classProcessing_1_1ImageProcessing_1a670615ff281c73f9801944affaa545e1" kindref="member">stripVector8bit</ref>(out,<sp/>rows,<sp/>columns);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCritical()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PROCESSING]<sp/>Word<sp/>size<sp/>is<sp/>not<sp/>supported<sp/>(only<sp/>uint8_t)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PROCESSING]<sp/>Decoded<sp/>strip<sp/>image<sp/>vector<sp/>with&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pixel_count</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;elements<sp/>(<sp/>sizeof:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ws<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>qInfo().nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;$<sp/>&lt;b&gt;&lt;u&gt;[PROCESSING]<sp/>Strip<sp/>[x/y]:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>columns<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rows<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/u&gt;&lt;/b&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>DEBUG_PRESERVE_BINARY)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFile::remove(<ref refid="classConfig_1_1Paths_1a812a16f7eef2d26857f3ecf0fca2eb74" kindref="member">Config::Paths::lod</ref>(0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classProcessing_1_1ImageProcessing_1ac293f0f4b9e36730dcb121c3308bffcc" kindref="member">setProcessingStrip</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal">QByteArray<sp/>ImageProcessing::fileToByteArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>path)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>file(path);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>file.open(QIODevice::ReadOnly))</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCritical().noquote()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PROCESSING]<sp/>Error<sp/>opening<sp/>file<sp/>|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>path<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/>for<sp/>converting<sp/>to<sp/>raw<sp/>bytes<sp/>data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QByteArray();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file.readAll();</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><ref refid="classMap_1_1ImageModel" kindref="compound">Map::ImageModel</ref>*<sp/><ref refid="classProcessing_1_1ImageProcessing_1a0d8f5b4d4682bd56b49313d2abf927e1" kindref="member">ImageProcessing::model</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_model;<sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classProcessing_1_1ImageProcessing_1a9502e60c340934b13e8c418bff7e96ed" kindref="member">ImageProcessing::passImage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structMap_1_1Image" kindref="compound">Map::Image</ref>&amp;<sp/>image)<sp/>{<sp/><ref refid="classProcessing_1_1ImageProcessing_1a0d8f5b4d4682bd56b49313d2abf927e1" kindref="member">model</ref>()-&gt;<ref refid="classMap_1_1ImageModel_1aebb5141e6e5e4bc2fbf733443ea0afa7" kindref="member">add</ref>(image);<sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classProcessing_1_1ImageProcessing_1a4a6bd7eed16aff9ce291ad3d41fb48c1" kindref="member">ImageProcessing::exists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>name)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structMap_1_1Image" kindref="compound">Map::Image</ref><sp/>&amp;image<sp/>:<sp/>*<ref refid="classProcessing_1_1ImageProcessing_1a0d8f5b4d4682bd56b49313d2abf927e1" kindref="member">model</ref>()-&gt;direct())</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(image.<ref refid="structMap_1_1Image_1a29bcbfe80a9d0760fb4f097450a9c9cc" kindref="member">filename</ref><sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(image.<ref refid="structMap_1_1Image_1a29bcbfe80a9d0760fb4f097450a9c9cc" kindref="member">filename</ref>.chopped(4)<sp/>==<sp/>name.chopped(4))</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classProcessing_1_1ImageProcessing_1a454b28380fd22d1439dea25b64b2c364" kindref="member">ImageProcessing::indexFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;<sp/>name)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model()-&gt;direct()-&gt;size();<sp/>++i)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(model()-&gt;direct()-&gt;at(i).filename<sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(model()-&gt;direct()-&gt;at(i).filename.chopped(4)<sp/>==<sp/>name.chopped(4))</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classProcessing_1_1ImageProcessing_1a4a67937b9376dffc7ef16bcecada0267" kindref="member">ImageProcessing::processingImage</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_processingImage;<sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classProcessing_1_1ImageProcessing_1a4bb6326cb3b6fab5124daed04cd7e383" kindref="member">ImageProcessing::setProcessingImage</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_processingImage<sp/>==<sp/>other)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>m_processingImage<sp/>=<sp/>other;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classProcessing_1_1ImageProcessing_1ac369e5c995c829f60c9b6faaef8ff7f1" kindref="member">processingImageChanged</ref>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classProcessing_1_1ImageProcessing_1aca75a309403f242bf8eff0fdad591adf" kindref="member">ImageProcessing::processingStrip</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_processingStrip;<sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classProcessing_1_1ImageProcessing_1ac293f0f4b9e36730dcb121c3308bffcc" kindref="member">ImageProcessing::setProcessingStrip</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_processingStrip<sp/>==<sp/>other)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>m_processingStrip<sp/>=<sp/>other;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="classProcessing_1_1ImageProcessing_1ae32b3c0084fa82b8a14353e117e23488" kindref="member">processingStripChanged</ref>();</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/c++/processing/imageprocessing.c++"/>
  </compounddef>
</doxygen>
