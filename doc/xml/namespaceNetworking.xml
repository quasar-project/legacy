<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceNetworking" kind="namespace" language="C++">
    <compoundname>Networking</compoundname>
    <innerclass refid="classNetworking_1_1AbstractUDPSocket" prot="public">Networking::AbstractUDPSocket</innerclass>
    <innerclass refid="classNetworking_1_1Enums" prot="public">Networking::Enums</innerclass>
    <innerclass refid="structNetworking_1_1ExecdArgument" prot="public">Networking::ExecdArgument</innerclass>
    <innerclass refid="classNetworking_1_1ExecdArgumentList" prot="public">Networking::ExecdArgumentList</innerclass>
    <innerclass refid="classNetworking_1_1ExecdSocket" prot="public">Networking::ExecdSocket</innerclass>
    <innerclass refid="classNetworking_1_1FeedbackSocket" prot="public">Networking::FeedbackSocket</innerclass>
    <innerclass refid="classNetworking_1_1Network" prot="public">Networking::Network</innerclass>
    <innerclass refid="classNetworking_1_1Pinger" prot="public">Networking::Pinger</innerclass>
    <innerclass refid="structNetworking_1_1PlannerAppendDatagram" prot="public">Networking::PlannerAppendDatagram</innerclass>
    <innerclass refid="structNetworking_1_1PlannerRemoveDatagram" prot="public">Networking::PlannerRemoveDatagram</innerclass>
    <innerclass refid="structNetworking_1_1PlannerResponseDatagram" prot="public">Networking::PlannerResponseDatagram</innerclass>
    <innerclass refid="classNetworking_1_1RemoteData" prot="public">Networking::RemoteData</innerclass>
    <innerclass refid="classNetworking_1_1TCPSocket" prot="public">Networking::TCPSocket</innerclass>
    <innerclass refid="classNetworking_1_1Telemetry" prot="public">Networking::Telemetry</innerclass>
    <innerclass refid="structNetworking_1_1TelemetryDatagram" prot="public">Networking::TelemetryDatagram</innerclass>
    <innerclass refid="structNetworking_1_1TelemetryRequest" prot="public">Networking::TelemetryRequest</innerclass>
    <innerclass refid="classNetworking_1_1TelemetrySocket" prot="public">Networking::TelemetrySocket</innerclass>
    <innernamespace refid="namespaceNetworking_1_1utils">Networking::utils</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNetworking_1a24c2907021b2e1dc921073325c00aa9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QDataStream &amp;</type>
        <definition>QDataStream &amp; Networking::operator&lt;&lt;</definition>
        <argsstring>(QDataStream &amp;dataStream, const PlannerAppendDatagram &amp;data)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>Networking::operator&lt;&lt;</qualifiedname>
        <param>
          <type>QDataStream &amp;</type>
          <declname>dataStream</declname>
        </param>
        <param>
          <type>const <ref refid="structNetworking_1_1PlannerAppendDatagram" kindref="compound">PlannerAppendDatagram</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/planner/plannerdatagram.h" line="66" column="12" bodyfile="src/c++/network/planner/plannerdatagram.h" bodystart="66" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNetworking_1a08d1bb385a1ab074668245edf56871e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QDataStream &amp;</type>
        <definition>QDataStream &amp; Networking::operator&gt;&gt;</definition>
        <argsstring>(QDataStream &amp;dataStream, PlannerAppendDatagram &amp;data)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>Networking::operator&gt;&gt;</qualifiedname>
        <param>
          <type>QDataStream &amp;</type>
          <declname>dataStream</declname>
        </param>
        <param>
          <type><ref refid="structNetworking_1_1PlannerAppendDatagram" kindref="compound">PlannerAppendDatagram</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/planner/plannerdatagram.h" line="82" column="24" bodyfile="src/c++/network/planner/plannerdatagram.h" bodystart="82" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNetworking_1afb998634c42e3168158c52a1942f94ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QDataStream &amp;</type>
        <definition>QDataStream &amp; Networking::operator&lt;&lt;</definition>
        <argsstring>(QDataStream &amp;dataStream, const PlannerRemoveDatagram &amp;data)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>Networking::operator&lt;&lt;</qualifiedname>
        <param>
          <type>QDataStream &amp;</type>
          <declname>dataStream</declname>
        </param>
        <param>
          <type>const <ref refid="structNetworking_1_1PlannerRemoveDatagram" kindref="compound">PlannerRemoveDatagram</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/planner/plannerdatagram.h" line="98" column="12" bodyfile="src/c++/network/planner/plannerdatagram.h" bodystart="98" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNetworking_1a56e9b95b6095b5ea3761958f15f0cf3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QDataStream &amp;</type>
        <definition>QDataStream &amp; Networking::operator&gt;&gt;</definition>
        <argsstring>(QDataStream &amp;dataStream, PlannerRemoveDatagram &amp;data)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>Networking::operator&gt;&gt;</qualifiedname>
        <param>
          <type>QDataStream &amp;</type>
          <declname>dataStream</declname>
        </param>
        <param>
          <type><ref refid="structNetworking_1_1PlannerRemoveDatagram" kindref="compound">PlannerRemoveDatagram</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/planner/plannerdatagram.h" line="111" column="24" bodyfile="src/c++/network/planner/plannerdatagram.h" bodystart="111" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNetworking_1a41788a4a15e8dcfbc37c30926065446d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QDataStream &amp;</type>
        <definition>QDataStream &amp; Networking::operator&lt;&lt;</definition>
        <argsstring>(QDataStream &amp;dataStream, const PlannerResponseDatagram &amp;data)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>Networking::operator&lt;&lt;</qualifiedname>
        <param>
          <type>QDataStream &amp;</type>
          <declname>dataStream</declname>
        </param>
        <param>
          <type>const <ref refid="structNetworking_1_1PlannerResponseDatagram" kindref="compound">PlannerResponseDatagram</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/planner/plannerdatagram.h" line="124" column="12" bodyfile="src/c++/network/planner/plannerdatagram.h" bodystart="124" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNetworking_1a12173eb87c4220cc5a28ccc128ea3b00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QDataStream &amp;</type>
        <definition>QDataStream &amp; Networking::operator&gt;&gt;</definition>
        <argsstring>(QDataStream &amp;dataStream, PlannerResponseDatagram &amp;data)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>Networking::operator&gt;&gt;</qualifiedname>
        <param>
          <type>QDataStream &amp;</type>
          <declname>dataStream</declname>
        </param>
        <param>
          <type><ref refid="structNetworking_1_1PlannerResponseDatagram" kindref="compound">PlannerResponseDatagram</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/planner/plannerdatagram.h" line="133" column="24" bodyfile="src/c++/network/planner/plannerdatagram.h" bodystart="133" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNetworking_1acdc068882483a56be62dfee5628ca88a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QDataStream &amp;</type>
        <definition>QDataStream &amp; Networking::operator&lt;&lt;</definition>
        <argsstring>(QDataStream &amp;dataStream, const TelemetryDatagram &amp;data)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>Networking::operator&lt;&lt;</qualifiedname>
        <param>
          <type>QDataStream &amp;</type>
          <declname>dataStream</declname>
        </param>
        <param>
          <type>const <ref refid="structNetworking_1_1TelemetryDatagram" kindref="compound">TelemetryDatagram</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetrydatagram.h" line="71" column="12" bodyfile="src/c++/network/telemetry/telemetrydatagram.h" bodystart="71" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNetworking_1aa736e76e07522ff821090f7e7c00cc44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QDataStream &amp;</type>
        <definition>QDataStream &amp; Networking::operator&gt;&gt;</definition>
        <argsstring>(QDataStream &amp;dataStream, TelemetryDatagram &amp;data)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>Networking::operator&gt;&gt;</qualifiedname>
        <param>
          <type>QDataStream &amp;</type>
          <declname>dataStream</declname>
        </param>
        <param>
          <type><ref refid="structNetworking_1_1TelemetryDatagram" kindref="compound">TelemetryDatagram</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetrydatagram.h" line="93" column="24" bodyfile="src/c++/network/telemetry/telemetrydatagram.h" bodystart="93" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNetworking_1a5ec83d853bf3c7e9842a54f8ca4ab014" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QDataStream &amp;</type>
        <definition>QDataStream &amp; Networking::operator&lt;&lt;</definition>
        <argsstring>(QDataStream &amp;dataStream, const TelemetryRequest &amp;data)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>Networking::operator&lt;&lt;</qualifiedname>
        <param>
          <type>QDataStream &amp;</type>
          <declname>dataStream</declname>
        </param>
        <param>
          <type>const <ref refid="structNetworking_1_1TelemetryRequest" kindref="compound">TelemetryRequest</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetrydatagram.h" line="115" column="12" bodyfile="src/c++/network/telemetry/telemetrydatagram.h" bodystart="115" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNetworking_1a08d6caba0d64c7ad996f0b330f32a269" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QDataStream &amp;</type>
        <definition>QDataStream &amp; Networking::operator&gt;&gt;</definition>
        <argsstring>(QDataStream &amp;dataStream, TelemetryRequest &amp;data)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>Networking::operator&gt;&gt;</qualifiedname>
        <param>
          <type>QDataStream &amp;</type>
          <declname>dataStream</declname>
        </param>
        <param>
          <type><ref refid="structNetworking_1_1TelemetryRequest" kindref="compound">TelemetryRequest</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/telemetry/telemetrydatagram.h" line="126" column="24" bodyfile="src/c++/network/telemetry/telemetrydatagram.h" bodystart="126" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/c++/network/abstractudpsocket.h" line="7" column="1"/>
  </compounddef>
</doxygen>
