<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="d9/d86/classNetworking_1_1ExecdSocket" kind="class" language="C++" prot="public">
    <compoundname>Networking::ExecdSocket</compoundname>
    <basecompoundref prot="public" virt="non-virtual">AbstractUDPSocket</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="d9/d86/classNetworking_1_1ExecdSocket_1ab2892ab666521f081c6e8d42b848668a" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* COMMAND_TELESCOPIC</definition>
        <argsstring></argsstring>
        <name>COMMAND_TELESCOPIC</name>
        <qualifiedname>Networking::ExecdSocket::COMMAND_TELESCOPIC</qualifiedname>
        <initializer>= &quot;$FORM&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="12" column="37" bodyfile="src/c++/network/execd/execdsocket.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d86/classNetworking_1_1ExecdSocket_1a77c6800ace7745a4ccb7b8adf987d58b" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* COMMAND_START_STRIP</definition>
        <argsstring></argsstring>
        <name>COMMAND_START_STRIP</name>
        <qualifiedname>Networking::ExecdSocket::COMMAND_START_STRIP</qualifiedname>
        <initializer>= &quot;$strip&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="13" column="37" bodyfile="src/c++/network/execd/execdsocket.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d86/classNetworking_1_1ExecdSocket_1a2711f13a34039ac9dd90abf959bfa591" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* COMMAND_FOCUS</definition>
        <argsstring></argsstring>
        <name>COMMAND_FOCUS</name>
        <qualifiedname>Networking::ExecdSocket::COMMAND_FOCUS</qualifiedname>
        <initializer>= &quot;$focus&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="14" column="37" bodyfile="src/c++/network/execd/execdsocket.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d86/classNetworking_1_1ExecdSocket_1a261c572b595ca5197b863ec9b15d995a" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* COMMAND_STORAGE_STATUS</definition>
        <argsstring></argsstring>
        <name>COMMAND_STORAGE_STATUS</name>
        <qualifiedname>Networking::ExecdSocket::COMMAND_STORAGE_STATUS</qualifiedname>
        <initializer>= &quot;$storage_status()&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="15" column="37" bodyfile="src/c++/network/execd/execdsocket.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d86/classNetworking_1_1ExecdSocket_1a5c2ed7ac780ba490e4ec2c66c4b0807f" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* COMMAND_CLEAR_STORAGE</definition>
        <argsstring></argsstring>
        <name>COMMAND_CLEAR_STORAGE</name>
        <qualifiedname>Networking::ExecdSocket::COMMAND_CLEAR_STORAGE</qualifiedname>
        <initializer>= &quot;$clear_storage()&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="16" column="37" bodyfile="src/c++/network/execd/execdsocket.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d9/d86/classNetworking_1_1ExecdSocket_1aa941cfe08d962ed4ba572288f39d3eb1" prot="private" static="no" mutable="no">
        <type>ExecdArgumentList *</type>
        <definition>ExecdArgumentList* args</definition>
        <argsstring></argsstring>
        <name>args</name>
        <qualifiedname>Networking::ExecdSocket::args</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="38" column="31" bodyfile="src/c++/network/execd/execdsocket.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d86/classNetworking_1_1ExecdSocket_1ac6e1dc1f36c097bb2adc0d314d69abff" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t message_uid</definition>
        <argsstring></argsstring>
        <name>message_uid</name>
        <qualifiedname>Networking::ExecdSocket::message_uid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="39" column="22" bodyfile="src/c++/network/execd/execdsocket.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/d86/classNetworking_1_1ExecdSocket_1aa88751a63390d47bdbd43c98c9dcf181" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ExecdSocket</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>ExecdSocket</name>
        <qualifiedname>Networking::ExecdSocket::ExecdSocket</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="19" column="22" bodyfile="src/c++/network/execd/execdsocket.c++" bodystart="10" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="d9/d86/classNetworking_1_1ExecdSocket_1a958f448ca262fd5e96958cbfeec13676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void start</definition>
        <argsstring>(const QString &amp;address)</argsstring>
        <name>start</name>
        <qualifiedname>Networking::ExecdSocket::start</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="21" column="18" bodyfile="src/c++/network/execd/execdsocket.c++" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="d9/d86/classNetworking_1_1ExecdSocket_1a8c528baf37154d347366083f0f816846" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>Networking::ExecdSocket::stop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="22" column="18" bodyfile="src/c++/network/execd/execdsocket.c++" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="d9/d86/classNetworking_1_1ExecdSocket_1aca9a6b4dd04cee4d035855754cdfc8ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void executeCommand</definition>
        <argsstring>(const QString &amp;command)</argsstring>
        <name>executeCommand</name>
        <qualifiedname>Networking::ExecdSocket::executeCommand</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>command</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="23" column="18" bodyfile="src/c++/network/execd/execdsocket.c++" bodystart="30" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="d9/d86/classNetworking_1_1ExecdSocket_1a17d8eb18cc25d019db6e8a621ee5dc4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void executeCommand</definition>
        <argsstring>(Enums::NetworkCommand command)</argsstring>
        <name>executeCommand</name>
        <qualifiedname>Networking::ExecdSocket::executeCommand</qualifiedname>
        <param>
          <type>Enums::NetworkCommand</type>
          <declname>command</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="24" column="18" bodyfile="src/c++/network/execd/execdsocket.c++" bodystart="38" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="d9/d86/classNetworking_1_1ExecdSocket_1aa567678ed14b3936f7e0d0e2457bc546" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>ExecdArgumentList *</type>
        <definition>ExecdArgumentList * list</definition>
        <argsstring>() const noexcept</argsstring>
        <name>list</name>
        <qualifiedname>Networking::ExecdSocket::list</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="25" column="31" bodyfile="src/c++/network/execd/execdsocket.c++" bodystart="90" bodyend="90"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="d9/d86/classNetworking_1_1ExecdSocket_1ad8136df344f340b0653c27e3317c08f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ping</definition>
        <argsstring>()</argsstring>
        <name>ping</name>
        <qualifiedname>Networking::ExecdSocket::ping</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="28" column="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d9/d86/classNetworking_1_1ExecdSocket_1ad8aadd331579c49a2766349a4d13608b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString wrap</definition>
        <argsstring>(const QString &amp;string)</argsstring>
        <name>wrap</name>
        <qualifiedname>Networking::ExecdSocket::wrap</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="31" column="21" bodyfile="src/c++/network/execd/execdsocket.c++" bodystart="92" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="d9/d86/classNetworking_1_1ExecdSocket_1a85a938b856b57ac4308c7f9af2f30de3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QByteArray</type>
        <definition>QByteArray finalize</definition>
        <argsstring>(const QString &amp;string)</argsstring>
        <name>finalize</name>
        <qualifiedname>Networking::ExecdSocket::finalize</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="32" column="24" bodyfile="src/c++/network/execd/execdsocket.c++" bodystart="107" bodyend="110"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-slot">
      <memberdef kind="slot" id="d9/d86/classNetworking_1_1ExecdSocket_1aa2fe74f3ed644ff0bd1c886e9bece04b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void processResult</definition>
        <argsstring>(QByteArray data)</argsstring>
        <name>processResult</name>
        <qualifiedname>Networking::ExecdSocket::processResult</qualifiedname>
        <param>
          <type>QByteArray</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/network/execd/execdsocket.h" line="35" column="22" bodyfile="src/c++/network/execd/execdsocket.c++" bodystart="112" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/c++/network/execd/execdsocket.h" line="9" column="5" bodyfile="src/c++/network/execd/execdsocket.h" bodystart="10" bodyend="40"/>
    <listofallmembers>
      <member refid="db/db6/classNetworking_1_1AbstractUDPSocket_1a32422a487d1c53b078747f40bb7f3ce6" prot="public" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>AbstractUDPSocket</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1aa941cfe08d962ed4ba572288f39d3eb1" prot="private" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>args</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1a5c2ed7ac780ba490e4ec2c66c4b0807f" prot="private" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>COMMAND_CLEAR_STORAGE</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1a2711f13a34039ac9dd90abf959bfa591" prot="private" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>COMMAND_FOCUS</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1a77c6800ace7745a4ccb7b8adf987d58b" prot="private" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>COMMAND_START_STRIP</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1a261c572b595ca5197b863ec9b15d995a" prot="private" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>COMMAND_STORAGE_STATUS</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1ab2892ab666521f081c6e8d42b848668a" prot="private" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>COMMAND_TELESCOPIC</name></member>
      <member refid="db/db6/classNetworking_1_1AbstractUDPSocket_1a01948d8cb99ea51677e34382c9e2c8aa" prot="public" virt="virtual"><scope>Networking::ExecdSocket</scope><name>connect</name></member>
      <member refid="db/db6/classNetworking_1_1AbstractUDPSocket_1a960705de531a20389fb29928d43258c3" prot="public" virt="virtual"><scope>Networking::ExecdSocket</scope><name>disconnect</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1aa88751a63390d47bdbd43c98c9dcf181" prot="public" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>ExecdSocket</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1aca9a6b4dd04cee4d035855754cdfc8ee" prot="public" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>executeCommand</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1a17d8eb18cc25d019db6e8a621ee5dc4b" prot="public" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>executeCommand</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1a85a938b856b57ac4308c7f9af2f30de3" prot="private" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>finalize</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1aa567678ed14b3936f7e0d0e2457bc546" prot="public" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>list</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1ac6e1dc1f36c097bb2adc0d314d69abff" prot="private" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>message_uid</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1ad8136df344f340b0653c27e3317c08f5" prot="public" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>ping</name></member>
      <member refid="db/db6/classNetworking_1_1AbstractUDPSocket_1a6aac8bbc4a1ac6c37d4c9f0564256fbd" prot="public" virt="virtual"><scope>Networking::ExecdSocket</scope><name>port</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1aa2fe74f3ed644ff0bd1c886e9bece04b" prot="private" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>processResult</name></member>
      <member refid="db/db6/classNetworking_1_1AbstractUDPSocket_1a3eb63c5af67a44fb60ba731d3da7a56d" prot="public" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>received</name></member>
      <member refid="db/db6/classNetworking_1_1AbstractUDPSocket_1ad1239ca09fddf150d1584cdf26baf7f3" prot="public" virt="virtual"><scope>Networking::ExecdSocket</scope><name>send</name></member>
      <member refid="db/db6/classNetworking_1_1AbstractUDPSocket_1a270b32a7b4f3d08e655807d4101acbd7" prot="public" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>socketDisconnected</name></member>
      <member refid="db/db6/classNetworking_1_1AbstractUDPSocket_1a58d7e2b4c7d46a5ae4041d122b03b584" prot="public" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>socketMetrics</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1a958f448ca262fd5e96958cbfeec13676" prot="public" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>start</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1a8c528baf37154d347366083f0f816846" prot="public" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>stop</name></member>
      <member refid="d9/d86/classNetworking_1_1ExecdSocket_1ad8aadd331579c49a2766349a4d13608b" prot="private" virt="non-virtual"><scope>Networking::ExecdSocket</scope><name>wrap</name></member>
      <member refid="db/db6/classNetworking_1_1AbstractUDPSocket_1a77ae26aeec30cf7f4c50d2c1a03bdb4b" prot="public" virt="virtual"><scope>Networking::ExecdSocket</scope><name>~AbstractUDPSocket</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
