<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="da/d17/paths_8c_09_09" kind="file" language="C++">
    <compoundname>paths.c++</compoundname>
    <includes refid="dd/df2/paths_8h" local="yes">paths.h</includes>
    <includes local="no">QtCore/QCoreApplication</includes>
    <includes local="no">QtCore/QDir</includes>
    <includes local="no">QtCore/QDebug</includes>
    <includes local="no">QtCore/QFile</includes>
    <includes local="no">QtCore/QSaveFile</includes>
    <includes local="no">QtCore/QTextStream</includes>
    <incdepgraph>
      <node id="1">
        <label>src/c++/config/paths.c++</label>
        <link refid="da/d17/paths_8c_09_09"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>paths.h</label>
        <link refid="dd/df2/paths_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>QtCore/QCoreApplication</label>
      </node>
      <node id="6">
        <label>QtCore/QDebug</label>
      </node>
      <node id="5">
        <label>QtCore/QDir</label>
      </node>
      <node id="7">
        <label>QtCore/QFile</label>
      </node>
      <node id="3">
        <label>QtCore/QObject</label>
      </node>
      <node id="8">
        <label>QtCore/QSaveFile</label>
      </node>
      <node id="9">
        <label>QtCore/QTextStream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="da/d17/paths_8c_09_09_1ad272df6470b7b68371b0521572f15d87" prot="public" static="no">
        <name>PATH_MKDIR</name>
        <param><defname>name</defname></param>
        <initializer>                         QDir name##Directory(name());                                              \
                         if(not name##Directory.exists()) {                                         \
                             name##Directory.mkpath(name());                                        \
                             qInfo() &lt;&lt; &quot;[PATH] Created&quot; &lt;&lt; #name &lt;&lt; &quot;folder at&quot; &lt;&lt; name();         \
                         }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/c++/config/paths.c++" line="10" column="9" bodyfile="src/c++/config/paths.c++" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;paths.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QCoreApplication&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QDir&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QDebug&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QFile&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QSaveFile&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QTextStream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PATH_MKDIR(name)<sp/>QDir<sp/>name##Directory(name());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(not<sp/>name##Directory.exists())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name##Directory.mkpath(name());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qInfo()<sp/>&lt;&lt;<sp/>&quot;[PATH]<sp/>Created&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>#name<sp/>&lt;&lt;<sp/>&quot;folder<sp/>at&quot;<sp/>&lt;&lt;<sp/>name();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d2/dff/namespaceConfig" kindref="compound">Config</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">Paths::Paths(QObject<sp/>*parent)<sp/>:<sp/>QObject{parent}</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;createImageCache();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>PATH_MKDIR(config)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>PATH_MKDIR(mapConfig)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>PATH_MKDIR(themes)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>PATH_MKDIR(offlineTiles)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>PATH_MKDIR(logs)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>PATH_MKDIR(runtimeBash)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;createMapConfigs();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(themesDirectory.isEmpty())</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFile::copy(</highlight><highlight class="stringliteral">&quot;:/themes/nord.json&quot;</highlight><highlight class="normal">,<sp/>themes()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/nord.json&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFile::copy(</highlight><highlight class="stringliteral">&quot;:/themes/catpuccin.json&quot;</highlight><highlight class="normal">,<sp/>themes()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/catpuccin.json&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qInfo()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PATH]<sp/>Default<sp/>themes<sp/>placed<sp/>in<sp/>folder&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(runtimeBashDirectory.isEmpty(QDir::Files))</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFile::copy(</highlight><highlight class="stringliteral">&quot;:/wrapped/poweroff.sh&quot;</highlight><highlight class="normal">,<sp/>bash()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/poweroff.sh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFile::copy(</highlight><highlight class="stringliteral">&quot;:/wrapped/reboot.sh&quot;</highlight><highlight class="normal">,<sp/>bash()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/reboot.sh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">Paths<sp/>*Paths::get()<sp/>{<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Paths<sp/>instance;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;instance;<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">QString<sp/>Paths::root()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QCoreApplication::applicationDirPath();<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">QString<sp/>Paths::imageCache()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/cache&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">QString<sp/>Paths::lod(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>&gt;<sp/>LOD_LEVELS<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCritical()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PATH]<sp/>Someone<sp/>asked<sp/>for<sp/>non-existent<sp/>LOD<sp/>folder&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>LOD<sp/>level&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>imageCache()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/lod&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString::number(level);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">QString<sp/>Paths::tcp()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>imageCache()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/tcp&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">QString<sp/>Paths::mapConfig()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>config()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/map&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">QString<sp/>Paths::offlineTiles()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/offline&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">QString<sp/>Paths::config()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/config&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">QString<sp/>Paths::logs()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/logs&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">QString<sp/>Paths::themes()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/themes&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">QString<sp/>Paths::bash()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/bash&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">QString<sp/>Paths::runtimeBash()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bash()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/custom&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Paths::createImageCache(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>QDir<sp/>dir(imageCache());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>dir.exists())</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir.mkpath(imageCache());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir.mkpath(tcp());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>LOD_LEVELS;<sp/>++i)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir.mkpath(lod(i));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>qInfo()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PATH]<sp/>Created<sp/>image<sp/>cache<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imageCache();</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Paths::clearImageCache(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>QDir<sp/>dir(imageCache());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dir.exists())</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir.removeRecursively();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>qWarning()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PATH]<sp/>Deleted<sp/>image<sp/>cache&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>createImageCache();</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Paths::createMapConfigs(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile::copy(</highlight><highlight class="stringliteral">&quot;:/osmconfigs/satellite&quot;</highlight><highlight class="normal">,<sp/>mapConfig()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/satellite&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile::copy(</highlight><highlight class="stringliteral">&quot;:/osmconfigs/terrain&quot;</highlight><highlight class="normal">,<sp/>mapConfig()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/terrain&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile::copy(</highlight><highlight class="stringliteral">&quot;:/osmconfigs/transit&quot;</highlight><highlight class="normal">,<sp/>mapConfig()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/transit&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile::copy(</highlight><highlight class="stringliteral">&quot;:/osmconfigs/cycle&quot;</highlight><highlight class="normal">,<sp/>mapConfig()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/cycle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile::copy(</highlight><highlight class="stringliteral">&quot;:/osmconfigs/hiking&quot;</highlight><highlight class="normal">,<sp/>mapConfig()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/hiking&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile::copy(</highlight><highlight class="stringliteral">&quot;:/osmconfigs/night-transit&quot;</highlight><highlight class="normal">,<sp/>mapConfig()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/night-transit&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>_street<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{\r\n<sp/><sp/><sp/><sp/>\&quot;UrlTemplate\&quot;<sp/>:<sp/>\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;file:///&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offlineTiles()<sp/>+</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/%z/%x/%y&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;,\r\n<sp/><sp/><sp/><sp/>\&quot;ImageFormat\&quot;<sp/>:<sp/>\&quot;png\&quot;,\r\n<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;QImageFormat\&quot;<sp/>:<sp/>\&quot;Indexed8\&quot;,\r\n<sp/><sp/><sp/><sp/>\&quot;MaximumZoomLevel\&quot;<sp/>:<sp/>18,\r\n<sp/><sp/><sp/><sp/>\&quot;ID\&quot;<sp/>:<sp/>\&quot;wmf-intl-1x\&quot;,\r\n<sp/><sp/><sp/><sp/>\&quot;MapCopyRight\&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&lt;a<sp/>href=\&apos;https://wikimediafoundation.org/wiki/Terms_of_Use\&apos;&gt;WikiMedia<sp/>Foundation&lt;/a&gt;\&quot;,\r\n<sp/><sp/><sp/><sp/>\&quot;DataCopyRight\&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;&lt;a<sp/>href=\&apos;http://www.openstreetmap.org/copyright\&apos;&gt;OpenStreetMap&lt;/a&gt;<sp/>contributors\&quot;,\r\n<sp/><sp/><sp/><sp/>\&quot;Timestamp\&quot;<sp/>:<sp/>\&quot;2019-02-01\&quot;\r\n}\r\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>QSaveFile<sp/>street(mapConfig()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/street&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>street.open(QIODevice::WriteOnly);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>QTextStream<sp/>out7(&amp;street);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>out7<sp/>&lt;&lt;<sp/>_street;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>street.commit();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[PATH]<sp/>Map<sp/>configs<sp/>placed<sp/>in<sp/>folder&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/c++/config/paths.c++"/>
  </compounddef>
</doxygen>
